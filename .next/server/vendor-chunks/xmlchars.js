"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/xmlchars";
exports.ids = ["vendor-chunks/xmlchars"];
exports.modules = {

/***/ "(ssr)/./node_modules/xmlchars/xml/1.0/ed5.js":
/*!**********************************************!*\
  !*** ./node_modules/xmlchars/xml/1.0/ed5.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Character classes and associated utilities for the 5th edition of XML 1.0.\n *\n * @author Louis-Dominique Dubeau\n * @license MIT\n * @copyright Louis-Dominique Dubeau\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//\n// Fragments.\n//\nexports.CHAR = \"\t\\n\\r -퟿-�\\uD800\\uDC00-\\uDBFF\\uDFFF\";\nexports.S = \" \t\\r\\n\";\n// tslint:disable-next-line:max-line-length\nexports.NAME_START_CHAR = \":A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-˿Ͱ-ͽͿ-῿‌‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�\\uD800\\uDC00-\\uDB7F\\uDFFF\";\nexports.NAME_CHAR = \"-\" + exports.NAME_START_CHAR + \".0-9\\xb7̀-ͯ‿-⁀\";\n//\n// Regular expressions.\n//\nexports.CHAR_RE = new RegExp(\"^[\" + exports.CHAR + \"]$\", \"u\");\nexports.S_RE = new RegExp(\"^[\" + exports.S + \"]+$\", \"u\");\nexports.NAME_START_CHAR_RE = new RegExp(\"^[\" + exports.NAME_START_CHAR + \"]$\", \"u\");\nexports.NAME_CHAR_RE = new RegExp(\"^[\" + exports.NAME_CHAR + \"]$\", \"u\");\nexports.NAME_RE = new RegExp(\"^[\" + exports.NAME_START_CHAR + \"][\" + exports.NAME_CHAR + \"]*$\", \"u\");\nexports.NMTOKEN_RE = new RegExp(\"^[\" + exports.NAME_CHAR + \"]+$\", \"u\");\nvar TAB = 9;\nvar NL = 0xA;\nvar CR = 0xD;\nvar SPACE = 0x20;\n//\n// Lists.\n//\n/** All characters in the ``S`` production. */ exports.S_LIST = [\n    SPACE,\n    NL,\n    CR,\n    TAB\n];\n/**\n * Determines whether a codepoint matches the ``CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``CHAR``.\n */ function isChar(c) {\n    return c >= SPACE && c <= 0xD7FF || c === NL || c === CR || c === TAB || c >= 0xE000 && c <= 0xFFFD || c >= 0x10000 && c <= 0x10FFFF;\n}\nexports.isChar = isChar;\n/**\n * Determines whether a codepoint matches the ``S`` (space) production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``S``.\n */ function isS(c) {\n    return c === SPACE || c === NL || c === CR || c === TAB;\n}\nexports.isS = isS;\n/**\n * Determines whether a codepoint matches the ``NAME_START_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``NAME_START_CHAR``.\n */ function isNameStartChar(c) {\n    return c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A || c === 0x3A || c === 0x5F || c === 0x200C || c === 0x200D || c >= 0xC0 && c <= 0xD6 || c >= 0xD8 && c <= 0xF6 || c >= 0x00F8 && c <= 0x02FF || c >= 0x0370 && c <= 0x037D || c >= 0x037F && c <= 0x1FFF || c >= 0x2070 && c <= 0x218F || c >= 0x2C00 && c <= 0x2FEF || c >= 0x3001 && c <= 0xD7FF || c >= 0xF900 && c <= 0xFDCF || c >= 0xFDF0 && c <= 0xFFFD || c >= 0x10000 && c <= 0xEFFFF;\n}\nexports.isNameStartChar = isNameStartChar;\n/**\n * Determines whether a codepoint matches the ``NAME_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``NAME_CHAR``.\n */ function isNameChar(c) {\n    return isNameStartChar(c) || c >= 0x30 && c <= 0x39 || c === 0x2D || c === 0x2E || c === 0xB7 || c >= 0x0300 && c <= 0x036F || c >= 0x203F && c <= 0x2040;\n}\nexports.isNameChar = isNameChar; //# sourceMappingURL=ed5.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sY2hhcnMveG1sLzEuMC9lZDUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjs7Ozs7O0NBTUMsR0FDREEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsRUFBRTtBQUNGLGFBQWE7QUFDYixFQUFFO0FBQ0ZELFlBQVksR0FBRztBQUNmQSxTQUFTLEdBQUc7QUFDWiwyQ0FBMkM7QUFDM0NBLHVCQUF1QixHQUFHO0FBQzFCQSxpQkFBaUIsR0FBRyxNQUFNQSxRQUFRSSxlQUFlLEdBQUc7QUFDcEQsRUFBRTtBQUNGLHVCQUF1QjtBQUN2QixFQUFFO0FBQ0ZKLGVBQWUsR0FBRyxJQUFJTyxPQUFPLE9BQU9QLFFBQVFFLElBQUksR0FBRyxNQUFNO0FBQ3pERixZQUFZLEdBQUcsSUFBSU8sT0FBTyxPQUFPUCxRQUFRRyxDQUFDLEdBQUcsT0FBTztBQUNwREgsMEJBQTBCLEdBQUcsSUFBSU8sT0FBTyxPQUFPUCxRQUFRSSxlQUFlLEdBQUcsTUFBTTtBQUMvRUosb0JBQW9CLEdBQUcsSUFBSU8sT0FBTyxPQUFPUCxRQUFRSyxTQUFTLEdBQUcsTUFBTTtBQUNuRUwsZUFBZSxHQUFHLElBQUlPLE9BQU8sT0FBT1AsUUFBUUksZUFBZSxHQUFHLE9BQU9KLFFBQVFLLFNBQVMsR0FBRyxPQUFPO0FBQ2hHTCxrQkFBa0IsR0FBRyxJQUFJTyxPQUFPLE9BQU9QLFFBQVFLLFNBQVMsR0FBRyxPQUFPO0FBQ2xFLElBQUlRLE1BQU07QUFDVixJQUFJQyxLQUFLO0FBQ1QsSUFBSUMsS0FBSztBQUNULElBQUlDLFFBQVE7QUFDWixFQUFFO0FBQ0YsU0FBUztBQUNULEVBQUU7QUFDRiw0Q0FBNEMsR0FDNUNoQixjQUFjLEdBQUc7SUFBQ2dCO0lBQU9GO0lBQUlDO0lBQUlGO0NBQUk7QUFDckM7Ozs7OztDQU1DLEdBQ0QsU0FBU0ssT0FBT0MsQ0FBQztJQUNiLE9BQU8sS0FBTUgsU0FBU0csS0FBSyxVQUN2QkEsTUFBTUwsTUFBTUssTUFBTUosTUFBTUksTUFBTU4sT0FDN0JNLEtBQUssVUFBVUEsS0FBSyxVQUNwQkEsS0FBSyxXQUFXQSxLQUFLO0FBQzlCO0FBQ0FuQixjQUFjLEdBQUdrQjtBQUNqQjs7Ozs7O0NBTUMsR0FDRCxTQUFTRSxJQUFJRCxDQUFDO0lBQ1YsT0FBT0EsTUFBTUgsU0FBU0csTUFBTUwsTUFBTUssTUFBTUosTUFBTUksTUFBTU47QUFDeEQ7QUFDQWIsV0FBVyxHQUFHb0I7QUFDZDs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxnQkFBZ0JGLENBQUM7SUFDdEIsT0FBUSxLQUFNLFFBQVFBLEtBQUssUUFDdEJBLEtBQUssUUFBUUEsS0FBSyxRQUNuQkEsTUFBTSxRQUNOQSxNQUFNLFFBQ05BLE1BQU0sVUFDTkEsTUFBTSxVQUNMQSxLQUFLLFFBQVFBLEtBQUssUUFDbEJBLEtBQUssUUFBUUEsS0FBSyxRQUNsQkEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUssVUFDcEJBLEtBQUssVUFBVUEsS0FBSyxVQUNwQkEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUssVUFDcEJBLEtBQUssVUFBVUEsS0FBSyxVQUNwQkEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUssVUFDcEJBLEtBQUssV0FBV0EsS0FBSztBQUM5QjtBQUNBbkIsdUJBQXVCLEdBQUdxQjtBQUMxQjs7Ozs7O0NBTUMsR0FDRCxTQUFTQyxXQUFXSCxDQUFDO0lBQ2pCLE9BQU9FLGdCQUFnQkYsTUFDbEJBLEtBQUssUUFBUUEsS0FBSyxRQUNuQkEsTUFBTSxRQUNOQSxNQUFNLFFBQ05BLE1BQU0sUUFDTEEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUs7QUFDN0I7QUFDQW5CLGtCQUFrQixHQUFHc0IsWUFDckIsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGljdGlvbmFyeS1nYW1lLy4vbm9kZV9tb2R1bGVzL3htbGNoYXJzL3htbC8xLjAvZWQ1LmpzP2MyNzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENoYXJhY3RlciBjbGFzc2VzIGFuZCBhc3NvY2lhdGVkIHV0aWxpdGllcyBmb3IgdGhlIDV0aCBlZGl0aW9uIG9mIFhNTCAxLjAuXG4gKlxuICogQGF1dGhvciBMb3Vpcy1Eb21pbmlxdWUgRHViZWF1XG4gKiBAbGljZW5zZSBNSVRcbiAqIEBjb3B5cmlnaHQgTG91aXMtRG9taW5pcXVlIER1YmVhdVxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vL1xuLy8gRnJhZ21lbnRzLlxuLy9cbmV4cG9ydHMuQ0hBUiA9IFwiXFx0XFxuXFxyIC1cXHVEN0ZGXFx1RTAwMC1cXHVGRkZEXFx1RDgwMFxcdURDMDAtXFx1REJGRlxcdURGRkZcIjtcbmV4cG9ydHMuUyA9IFwiIFxcdFxcclxcblwiO1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuZXhwb3J0cy5OQU1FX1NUQVJUX0NIQVIgPSBcIjpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQ1xcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXHVEODAwXFx1REMwMC1cXHVEQjdGXFx1REZGRlwiO1xuZXhwb3J0cy5OQU1FX0NIQVIgPSBcIi1cIiArIGV4cG9ydHMuTkFNRV9TVEFSVF9DSEFSICsgXCIuMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MFwiO1xuLy9cbi8vIFJlZ3VsYXIgZXhwcmVzc2lvbnMuXG4vL1xuZXhwb3J0cy5DSEFSX1JFID0gbmV3IFJlZ0V4cChcIl5bXCIgKyBleHBvcnRzLkNIQVIgKyBcIl0kXCIsIFwidVwiKTtcbmV4cG9ydHMuU19SRSA9IG5ldyBSZWdFeHAoXCJeW1wiICsgZXhwb3J0cy5TICsgXCJdKyRcIiwgXCJ1XCIpO1xuZXhwb3J0cy5OQU1FX1NUQVJUX0NIQVJfUkUgPSBuZXcgUmVnRXhwKFwiXltcIiArIGV4cG9ydHMuTkFNRV9TVEFSVF9DSEFSICsgXCJdJFwiLCBcInVcIik7XG5leHBvcnRzLk5BTUVfQ0hBUl9SRSA9IG5ldyBSZWdFeHAoXCJeW1wiICsgZXhwb3J0cy5OQU1FX0NIQVIgKyBcIl0kXCIsIFwidVwiKTtcbmV4cG9ydHMuTkFNRV9SRSA9IG5ldyBSZWdFeHAoXCJeW1wiICsgZXhwb3J0cy5OQU1FX1NUQVJUX0NIQVIgKyBcIl1bXCIgKyBleHBvcnRzLk5BTUVfQ0hBUiArIFwiXSokXCIsIFwidVwiKTtcbmV4cG9ydHMuTk1UT0tFTl9SRSA9IG5ldyBSZWdFeHAoXCJeW1wiICsgZXhwb3J0cy5OQU1FX0NIQVIgKyBcIl0rJFwiLCBcInVcIik7XG52YXIgVEFCID0gOTtcbnZhciBOTCA9IDB4QTtcbnZhciBDUiA9IDB4RDtcbnZhciBTUEFDRSA9IDB4MjA7XG4vL1xuLy8gTGlzdHMuXG4vL1xuLyoqIEFsbCBjaGFyYWN0ZXJzIGluIHRoZSBgYFNgYCBwcm9kdWN0aW9uLiAqL1xuZXhwb3J0cy5TX0xJU1QgPSBbU1BBQ0UsIE5MLCBDUiwgVEFCXTtcbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIGEgY29kZXBvaW50IG1hdGNoZXMgdGhlIGBgQ0hBUmBgIHByb2R1Y3Rpb24uXG4gKlxuICogQHBhcmFtIGMgVGhlIGNvZGUgcG9pbnQuXG4gKlxuICogQHJldHVybnMgYGB0cnVlYGAgaWYgdGhlIGNvZGVwb2ludCBtYXRjaGVzIGBgQ0hBUmBgLlxuICovXG5mdW5jdGlvbiBpc0NoYXIoYykge1xuICAgIHJldHVybiAoYyA+PSBTUEFDRSAmJiBjIDw9IDB4RDdGRikgfHxcbiAgICAgICAgYyA9PT0gTkwgfHwgYyA9PT0gQ1IgfHwgYyA9PT0gVEFCIHx8XG4gICAgICAgIChjID49IDB4RTAwMCAmJiBjIDw9IDB4RkZGRCkgfHxcbiAgICAgICAgKGMgPj0gMHgxMDAwMCAmJiBjIDw9IDB4MTBGRkZGKTtcbn1cbmV4cG9ydHMuaXNDaGFyID0gaXNDaGFyO1xuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgYSBjb2RlcG9pbnQgbWF0Y2hlcyB0aGUgYGBTYGAgKHNwYWNlKSBwcm9kdWN0aW9uLlxuICpcbiAqIEBwYXJhbSBjIFRoZSBjb2RlIHBvaW50LlxuICpcbiAqIEByZXR1cm5zIGBgdHJ1ZWBgIGlmIHRoZSBjb2RlcG9pbnQgbWF0Y2hlcyBgYFNgYC5cbiAqL1xuZnVuY3Rpb24gaXNTKGMpIHtcbiAgICByZXR1cm4gYyA9PT0gU1BBQ0UgfHwgYyA9PT0gTkwgfHwgYyA9PT0gQ1IgfHwgYyA9PT0gVEFCO1xufVxuZXhwb3J0cy5pc1MgPSBpc1M7XG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhIGNvZGVwb2ludCBtYXRjaGVzIHRoZSBgYE5BTUVfU1RBUlRfQ0hBUmBgIHByb2R1Y3Rpb24uXG4gKlxuICogQHBhcmFtIGMgVGhlIGNvZGUgcG9pbnQuXG4gKlxuICogQHJldHVybnMgYGB0cnVlYGAgaWYgdGhlIGNvZGVwb2ludCBtYXRjaGVzIGBgTkFNRV9TVEFSVF9DSEFSYGAuXG4gKi9cbmZ1bmN0aW9uIGlzTmFtZVN0YXJ0Q2hhcihjKSB7XG4gICAgcmV0dXJuICgoYyA+PSAweDQxICYmIGMgPD0gMHg1QSkgfHxcbiAgICAgICAgKGMgPj0gMHg2MSAmJiBjIDw9IDB4N0EpIHx8XG4gICAgICAgIGMgPT09IDB4M0EgfHxcbiAgICAgICAgYyA9PT0gMHg1RiB8fFxuICAgICAgICBjID09PSAweDIwMEMgfHxcbiAgICAgICAgYyA9PT0gMHgyMDBEIHx8XG4gICAgICAgIChjID49IDB4QzAgJiYgYyA8PSAweEQ2KSB8fFxuICAgICAgICAoYyA+PSAweEQ4ICYmIGMgPD0gMHhGNikgfHxcbiAgICAgICAgKGMgPj0gMHgwMEY4ICYmIGMgPD0gMHgwMkZGKSB8fFxuICAgICAgICAoYyA+PSAweDAzNzAgJiYgYyA8PSAweDAzN0QpIHx8XG4gICAgICAgIChjID49IDB4MDM3RiAmJiBjIDw9IDB4MUZGRikgfHxcbiAgICAgICAgKGMgPj0gMHgyMDcwICYmIGMgPD0gMHgyMThGKSB8fFxuICAgICAgICAoYyA+PSAweDJDMDAgJiYgYyA8PSAweDJGRUYpIHx8XG4gICAgICAgIChjID49IDB4MzAwMSAmJiBjIDw9IDB4RDdGRikgfHxcbiAgICAgICAgKGMgPj0gMHhGOTAwICYmIGMgPD0gMHhGRENGKSB8fFxuICAgICAgICAoYyA+PSAweEZERjAgJiYgYyA8PSAweEZGRkQpIHx8XG4gICAgICAgIChjID49IDB4MTAwMDAgJiYgYyA8PSAweEVGRkZGKSk7XG59XG5leHBvcnRzLmlzTmFtZVN0YXJ0Q2hhciA9IGlzTmFtZVN0YXJ0Q2hhcjtcbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIGEgY29kZXBvaW50IG1hdGNoZXMgdGhlIGBgTkFNRV9DSEFSYGAgcHJvZHVjdGlvbi5cbiAqXG4gKiBAcGFyYW0gYyBUaGUgY29kZSBwb2ludC5cbiAqXG4gKiBAcmV0dXJucyBgYHRydWVgYCBpZiB0aGUgY29kZXBvaW50IG1hdGNoZXMgYGBOQU1FX0NIQVJgYC5cbiAqL1xuZnVuY3Rpb24gaXNOYW1lQ2hhcihjKSB7XG4gICAgcmV0dXJuIGlzTmFtZVN0YXJ0Q2hhcihjKSB8fFxuICAgICAgICAoYyA+PSAweDMwICYmIGMgPD0gMHgzOSkgfHxcbiAgICAgICAgYyA9PT0gMHgyRCB8fFxuICAgICAgICBjID09PSAweDJFIHx8XG4gICAgICAgIGMgPT09IDB4QjcgfHxcbiAgICAgICAgKGMgPj0gMHgwMzAwICYmIGMgPD0gMHgwMzZGKSB8fFxuICAgICAgICAoYyA+PSAweDIwM0YgJiYgYyA8PSAweDIwNDApO1xufVxuZXhwb3J0cy5pc05hbWVDaGFyID0gaXNOYW1lQ2hhcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVkNS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDSEFSIiwiUyIsIk5BTUVfU1RBUlRfQ0hBUiIsIk5BTUVfQ0hBUiIsIkNIQVJfUkUiLCJSZWdFeHAiLCJTX1JFIiwiTkFNRV9TVEFSVF9DSEFSX1JFIiwiTkFNRV9DSEFSX1JFIiwiTkFNRV9SRSIsIk5NVE9LRU5fUkUiLCJUQUIiLCJOTCIsIkNSIiwiU1BBQ0UiLCJTX0xJU1QiLCJpc0NoYXIiLCJjIiwiaXNTIiwiaXNOYW1lU3RhcnRDaGFyIiwiaXNOYW1lQ2hhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlchars/xml/1.0/ed5.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlchars/xml/1.1/ed2.js":
/*!**********************************************!*\
  !*** ./node_modules/xmlchars/xml/1.1/ed2.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Character classes and associated utilities for the 2nd edition of XML 1.1.\n *\n * @author Louis-Dominique Dubeau\n * @license MIT\n * @copyright Louis-Dominique Dubeau\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//\n// Fragments.\n//\nexports.CHAR = \"\\x01-퟿-�\\uD800\\uDC00-\\uDBFF\\uDFFF\";\nexports.RESTRICTED_CHAR = \"\\x01-\\b\\v\\f\\x0e-\\x1f\\x7f-\\x84\\x86-\\x9f\";\nexports.S = \" \t\\r\\n\";\n// tslint:disable-next-line:max-line-length\nexports.NAME_START_CHAR = \":A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-˿Ͱ-ͽͿ-῿‌‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�\\uD800\\uDC00-\\uDB7F\\uDFFF\";\nexports.NAME_CHAR = \"-\" + exports.NAME_START_CHAR + \".0-9\\xb7̀-ͯ‿-⁀\";\n//\n// Regular expressions.\n//\nexports.CHAR_RE = new RegExp(\"^[\" + exports.CHAR + \"]$\", \"u\");\nexports.RESTRICTED_CHAR_RE = new RegExp(\"^[\" + exports.RESTRICTED_CHAR + \"]$\", \"u\");\nexports.S_RE = new RegExp(\"^[\" + exports.S + \"]+$\", \"u\");\nexports.NAME_START_CHAR_RE = new RegExp(\"^[\" + exports.NAME_START_CHAR + \"]$\", \"u\");\nexports.NAME_CHAR_RE = new RegExp(\"^[\" + exports.NAME_CHAR + \"]$\", \"u\");\nexports.NAME_RE = new RegExp(\"^[\" + exports.NAME_START_CHAR + \"][\" + exports.NAME_CHAR + \"]*$\", \"u\");\nexports.NMTOKEN_RE = new RegExp(\"^[\" + exports.NAME_CHAR + \"]+$\", \"u\");\nvar TAB = 9;\nvar NL = 0xA;\nvar CR = 0xD;\nvar SPACE = 0x20;\n//\n// Lists.\n//\n/** All characters in the ``S`` production. */ exports.S_LIST = [\n    SPACE,\n    NL,\n    CR,\n    TAB\n];\n/**\n * Determines whether a codepoint matches the ``CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``CHAR``.\n */ function isChar(c) {\n    return c >= 0x0001 && c <= 0xD7FF || c >= 0xE000 && c <= 0xFFFD || c >= 0x10000 && c <= 0x10FFFF;\n}\nexports.isChar = isChar;\n/**\n * Determines whether a codepoint matches the ``RESTRICTED_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``RESTRICTED_CHAR``.\n */ function isRestrictedChar(c) {\n    return c >= 0x1 && c <= 0x8 || c === 0xB || c === 0xC || c >= 0xE && c <= 0x1F || c >= 0x7F && c <= 0x84 || c >= 0x86 && c <= 0x9F;\n}\nexports.isRestrictedChar = isRestrictedChar;\n/**\n * Determines whether a codepoint matches the ``CHAR`` production and does not\n * match the ``RESTRICTED_CHAR`` production. ``isCharAndNotRestricted(x)`` is\n * equivalent to ``isChar(x) && !isRestrictedChar(x)``. This function is faster\n * than running the two-call equivalent.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``CHAR`` and does not match\n * ``RESTRICTED_CHAR``.\n */ function isCharAndNotRestricted(c) {\n    return c === 0x9 || c === 0xA || c === 0xD || c > 0x1F && c < 0x7F || c === 0x85 || c > 0x9F && c <= 0xD7FF || c >= 0xE000 && c <= 0xFFFD || c >= 0x10000 && c <= 0x10FFFF;\n}\nexports.isCharAndNotRestricted = isCharAndNotRestricted;\n/**\n * Determines whether a codepoint matches the ``S`` (space) production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``S``.\n */ function isS(c) {\n    return c === SPACE || c === NL || c === CR || c === TAB;\n}\nexports.isS = isS;\n/**\n * Determines whether a codepoint matches the ``NAME_START_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``NAME_START_CHAR``.\n */ // tslint:disable-next-line:cyclomatic-complexity\nfunction isNameStartChar(c) {\n    return c >= 0x41 && c <= 0x5A || c >= 0x61 && c <= 0x7A || c === 0x3A || c === 0x5F || c === 0x200C || c === 0x200D || c >= 0xC0 && c <= 0xD6 || c >= 0xD8 && c <= 0xF6 || c >= 0x00F8 && c <= 0x02FF || c >= 0x0370 && c <= 0x037D || c >= 0x037F && c <= 0x1FFF || c >= 0x2070 && c <= 0x218F || c >= 0x2C00 && c <= 0x2FEF || c >= 0x3001 && c <= 0xD7FF || c >= 0xF900 && c <= 0xFDCF || c >= 0xFDF0 && c <= 0xFFFD || c >= 0x10000 && c <= 0xEFFFF;\n}\nexports.isNameStartChar = isNameStartChar;\n/**\n * Determines whether a codepoint matches the ``NAME_CHAR`` production.\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches ``NAME_CHAR``.\n */ function isNameChar(c) {\n    return isNameStartChar(c) || c >= 0x30 && c <= 0x39 || c === 0x2D || c === 0x2E || c === 0xB7 || c >= 0x0300 && c <= 0x036F || c >= 0x203F && c <= 0x2040;\n}\nexports.isNameChar = isNameChar; //# sourceMappingURL=ed2.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlchars/xml/1.1/ed2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/xmlchars/xmlns/1.0/ed3.js":
/*!************************************************!*\
  !*** ./node_modules/xmlchars/xmlns/1.0/ed3.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Character class utilities for XML NS 1.0 edition 3.\n *\n * @author Louis-Dominique Dubeau\n * @license MIT\n * @copyright Louis-Dominique Dubeau\n */ Object.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//\n// Fragments.\n//\n// tslint:disable-next-line:max-line-length\nexports.NC_NAME_START_CHAR = \"A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-˿Ͱ-ͽͿ-῿‌-‍⁰-↏Ⰰ-⿯、-퟿豈-﷏ﷰ-�\\uD800\\uDC00-\\uDB7F\\uDFFF\";\nexports.NC_NAME_CHAR = \"-\" + exports.NC_NAME_START_CHAR + \".0-9\\xb7̀-ͯ‿-⁀\";\n//\n// Regular expressions.\n//\nexports.NC_NAME_START_CHAR_RE = new RegExp(\"^[\" + exports.NC_NAME_START_CHAR + \"]$\", \"u\");\nexports.NC_NAME_CHAR_RE = new RegExp(\"^[\" + exports.NC_NAME_CHAR + \"]$\", \"u\");\nexports.NC_NAME_RE = new RegExp(\"^[\" + exports.NC_NAME_START_CHAR + \"][\" + exports.NC_NAME_CHAR + \"]*$\", \"u\");\n/**\n * Determines whether a codepoint matches [[NC_NAME_START_CHAR]].\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches.\n */ // tslint:disable-next-line:cyclomatic-complexity\nfunction isNCNameStartChar(c) {\n    return c >= 0x41 && c <= 0x5A || c === 0x5F || c >= 0x61 && c <= 0x7A || c >= 0xC0 && c <= 0xD6 || c >= 0xD8 && c <= 0xF6 || c >= 0x00F8 && c <= 0x02FF || c >= 0x0370 && c <= 0x037D || c >= 0x037F && c <= 0x1FFF || c >= 0x200C && c <= 0x200D || c >= 0x2070 && c <= 0x218F || c >= 0x2C00 && c <= 0x2FEF || c >= 0x3001 && c <= 0xD7FF || c >= 0xF900 && c <= 0xFDCF || c >= 0xFDF0 && c <= 0xFFFD || c >= 0x10000 && c <= 0xEFFFF;\n}\nexports.isNCNameStartChar = isNCNameStartChar;\n/**\n * Determines whether a codepoint matches [[NC_NAME_CHAR]].\n *\n * @param c The code point.\n *\n * @returns ``true`` if the codepoint matches.\n */ function isNCNameChar(c) {\n    return isNCNameStartChar(c) || c === 0x2D || c === 0x2E || c >= 0x30 && c <= 0x39 || c === 0x00B7 || c >= 0x0300 && c <= 0x036F || c >= 0x203F && c <= 0x2040;\n}\nexports.isNCNameChar = isNCNameChar; //# sourceMappingURL=ed3.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMveG1sY2hhcnMveG1sbnMvMS4wL2VkMy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiOzs7Ozs7Q0FNQyxHQUNEQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxFQUFFO0FBQ0YsYUFBYTtBQUNiLEVBQUU7QUFDRiwyQ0FBMkM7QUFDM0NELDBCQUEwQixHQUFHO0FBQzdCQSxvQkFBb0IsR0FBRyxNQUFNQSxRQUFRRSxrQkFBa0IsR0FBRztBQUMxRCxFQUFFO0FBQ0YsdUJBQXVCO0FBQ3ZCLEVBQUU7QUFDRkYsNkJBQTZCLEdBQUcsSUFBSUssT0FBTyxPQUFPTCxRQUFRRSxrQkFBa0IsR0FBRyxNQUFNO0FBQ3JGRix1QkFBdUIsR0FBRyxJQUFJSyxPQUFPLE9BQU9MLFFBQVFHLFlBQVksR0FBRyxNQUFNO0FBQ3pFSCxrQkFBa0IsR0FBRyxJQUFJSyxPQUFPLE9BQU9MLFFBQVFFLGtCQUFrQixHQUFHLE9BQU9GLFFBQVFHLFlBQVksR0FBRyxPQUFPO0FBQ3pHOzs7Ozs7Q0FNQyxHQUNELGlEQUFpRDtBQUNqRCxTQUFTSyxrQkFBa0JDLENBQUM7SUFDeEIsT0FBUSxLQUFNLFFBQVFBLEtBQUssUUFDdkJBLE1BQU0sUUFDTEEsS0FBSyxRQUFRQSxLQUFLLFFBQ2xCQSxLQUFLLFFBQVFBLEtBQUssUUFDbEJBLEtBQUssUUFBUUEsS0FBSyxRQUNsQkEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUssVUFDcEJBLEtBQUssVUFBVUEsS0FBSyxVQUNwQkEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUssVUFDcEJBLEtBQUssVUFBVUEsS0FBSyxVQUNwQkEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUssVUFDcEJBLEtBQUssVUFBVUEsS0FBSyxVQUNwQkEsS0FBSyxXQUFXQSxLQUFLO0FBQzlCO0FBQ0FULHlCQUF5QixHQUFHUTtBQUM1Qjs7Ozs7O0NBTUMsR0FDRCxTQUFTRSxhQUFhRCxDQUFDO0lBQ25CLE9BQU9ELGtCQUFrQkMsTUFDcEJBLE1BQU0sUUFDSEEsTUFBTSxRQUNMQSxLQUFLLFFBQVFBLEtBQUssUUFDbkJBLE1BQU0sVUFDTEEsS0FBSyxVQUFVQSxLQUFLLFVBQ3BCQSxLQUFLLFVBQVVBLEtBQUs7QUFDakM7QUFDQVQsb0JBQW9CLEdBQUdVLGNBQ3ZCLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BpY3Rpb25hcnktZ2FtZS8uL25vZGVfbW9kdWxlcy94bWxjaGFycy94bWxucy8xLjAvZWQzLmpzP2E1NWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKipcbiAqIENoYXJhY3RlciBjbGFzcyB1dGlsaXRpZXMgZm9yIFhNTCBOUyAxLjAgZWRpdGlvbiAzLlxuICpcbiAqIEBhdXRob3IgTG91aXMtRG9taW5pcXVlIER1YmVhdVxuICogQGxpY2Vuc2UgTUlUXG4gKiBAY29weXJpZ2h0IExvdWlzLURvbWluaXF1ZSBEdWJlYXVcbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy9cbi8vIEZyYWdtZW50cy5cbi8vXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXG5leHBvcnRzLk5DX05BTUVfU1RBUlRfQ0hBUiA9IFwiQS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcdUQ4MDBcXHVEQzAwLVxcdURCN0ZcXHVERkZGXCI7XG5leHBvcnRzLk5DX05BTUVfQ0hBUiA9IFwiLVwiICsgZXhwb3J0cy5OQ19OQU1FX1NUQVJUX0NIQVIgKyBcIi4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXCI7XG4vL1xuLy8gUmVndWxhciBleHByZXNzaW9ucy5cbi8vXG5leHBvcnRzLk5DX05BTUVfU1RBUlRfQ0hBUl9SRSA9IG5ldyBSZWdFeHAoXCJeW1wiICsgZXhwb3J0cy5OQ19OQU1FX1NUQVJUX0NIQVIgKyBcIl0kXCIsIFwidVwiKTtcbmV4cG9ydHMuTkNfTkFNRV9DSEFSX1JFID0gbmV3IFJlZ0V4cChcIl5bXCIgKyBleHBvcnRzLk5DX05BTUVfQ0hBUiArIFwiXSRcIiwgXCJ1XCIpO1xuZXhwb3J0cy5OQ19OQU1FX1JFID0gbmV3IFJlZ0V4cChcIl5bXCIgKyBleHBvcnRzLk5DX05BTUVfU1RBUlRfQ0hBUiArIFwiXVtcIiArIGV4cG9ydHMuTkNfTkFNRV9DSEFSICsgXCJdKiRcIiwgXCJ1XCIpO1xuLyoqXG4gKiBEZXRlcm1pbmVzIHdoZXRoZXIgYSBjb2RlcG9pbnQgbWF0Y2hlcyBbW05DX05BTUVfU1RBUlRfQ0hBUl1dLlxuICpcbiAqIEBwYXJhbSBjIFRoZSBjb2RlIHBvaW50LlxuICpcbiAqIEByZXR1cm5zIGBgdHJ1ZWBgIGlmIHRoZSBjb2RlcG9pbnQgbWF0Y2hlcy5cbiAqL1xuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmN5Y2xvbWF0aWMtY29tcGxleGl0eVxuZnVuY3Rpb24gaXNOQ05hbWVTdGFydENoYXIoYykge1xuICAgIHJldHVybiAoKGMgPj0gMHg0MSAmJiBjIDw9IDB4NUEpIHx8XG4gICAgICAgIGMgPT09IDB4NUYgfHxcbiAgICAgICAgKGMgPj0gMHg2MSAmJiBjIDw9IDB4N0EpIHx8XG4gICAgICAgIChjID49IDB4QzAgJiYgYyA8PSAweEQ2KSB8fFxuICAgICAgICAoYyA+PSAweEQ4ICYmIGMgPD0gMHhGNikgfHxcbiAgICAgICAgKGMgPj0gMHgwMEY4ICYmIGMgPD0gMHgwMkZGKSB8fFxuICAgICAgICAoYyA+PSAweDAzNzAgJiYgYyA8PSAweDAzN0QpIHx8XG4gICAgICAgIChjID49IDB4MDM3RiAmJiBjIDw9IDB4MUZGRikgfHxcbiAgICAgICAgKGMgPj0gMHgyMDBDICYmIGMgPD0gMHgyMDBEKSB8fFxuICAgICAgICAoYyA+PSAweDIwNzAgJiYgYyA8PSAweDIxOEYpIHx8XG4gICAgICAgIChjID49IDB4MkMwMCAmJiBjIDw9IDB4MkZFRikgfHxcbiAgICAgICAgKGMgPj0gMHgzMDAxICYmIGMgPD0gMHhEN0ZGKSB8fFxuICAgICAgICAoYyA+PSAweEY5MDAgJiYgYyA8PSAweEZEQ0YpIHx8XG4gICAgICAgIChjID49IDB4RkRGMCAmJiBjIDw9IDB4RkZGRCkgfHxcbiAgICAgICAgKGMgPj0gMHgxMDAwMCAmJiBjIDw9IDB4RUZGRkYpKTtcbn1cbmV4cG9ydHMuaXNOQ05hbWVTdGFydENoYXIgPSBpc05DTmFtZVN0YXJ0Q2hhcjtcbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIGEgY29kZXBvaW50IG1hdGNoZXMgW1tOQ19OQU1FX0NIQVJdXS5cbiAqXG4gKiBAcGFyYW0gYyBUaGUgY29kZSBwb2ludC5cbiAqXG4gKiBAcmV0dXJucyBgYHRydWVgYCBpZiB0aGUgY29kZXBvaW50IG1hdGNoZXMuXG4gKi9cbmZ1bmN0aW9uIGlzTkNOYW1lQ2hhcihjKSB7XG4gICAgcmV0dXJuIGlzTkNOYW1lU3RhcnRDaGFyKGMpIHx8XG4gICAgICAgIChjID09PSAweDJEIHx8XG4gICAgICAgICAgICBjID09PSAweDJFIHx8XG4gICAgICAgICAgICAoYyA+PSAweDMwICYmIGMgPD0gMHgzOSkgfHxcbiAgICAgICAgICAgIGMgPT09IDB4MDBCNyB8fFxuICAgICAgICAgICAgKGMgPj0gMHgwMzAwICYmIGMgPD0gMHgwMzZGKSB8fFxuICAgICAgICAgICAgKGMgPj0gMHgyMDNGICYmIGMgPD0gMHgyMDQwKSk7XG59XG5leHBvcnRzLmlzTkNOYW1lQ2hhciA9IGlzTkNOYW1lQ2hhcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVkMy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJOQ19OQU1FX1NUQVJUX0NIQVIiLCJOQ19OQU1FX0NIQVIiLCJOQ19OQU1FX1NUQVJUX0NIQVJfUkUiLCJSZWdFeHAiLCJOQ19OQU1FX0NIQVJfUkUiLCJOQ19OQU1FX1JFIiwiaXNOQ05hbWVTdGFydENoYXIiLCJjIiwiaXNOQ05hbWVDaGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/xmlchars/xmlns/1.0/ed3.js\n");

/***/ })

};
;