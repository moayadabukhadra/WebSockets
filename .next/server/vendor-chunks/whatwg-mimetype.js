"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/whatwg-mimetype";
exports.ids = ["vendor-chunks/whatwg-mimetype"];
exports.modules = {

/***/ "(ssr)/./node_modules/whatwg-mimetype/lib/mime-type-parameters.js":
/*!******************************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/mime-type-parameters.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { asciiLowercase, solelyContainsHTTPTokenCodePoints, soleyContainsHTTPQuotedStringTokenCodePoints } = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = class MIMETypeParameters {\n    constructor(map){\n        this._map = map;\n    }\n    get size() {\n        return this._map.size;\n    }\n    get(name) {\n        name = asciiLowercase(String(name));\n        return this._map.get(name);\n    }\n    has(name) {\n        name = asciiLowercase(String(name));\n        return this._map.has(name);\n    }\n    set(name, value) {\n        name = asciiLowercase(String(name));\n        value = String(value);\n        if (!solelyContainsHTTPTokenCodePoints(name)) {\n            throw new Error(`Invalid MIME type parameter name \"${name}\": only HTTP token code points are valid.`);\n        }\n        if (!soleyContainsHTTPQuotedStringTokenCodePoints(value)) {\n            throw new Error(`Invalid MIME type parameter value \"${value}\": only HTTP quoted-string token code points are ` + `valid.`);\n        }\n        return this._map.set(name, value);\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(name) {\n        name = asciiLowercase(String(name));\n        return this._map.delete(name);\n    }\n    forEach(callbackFn, thisArg) {\n        this._map.forEach(callbackFn, thisArg);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n    entries() {\n        return this._map.entries();\n    }\n    [Symbol.iterator]() {\n        return this._map[Symbol.iterator]();\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9taW1lLXR5cGUtcGFyYW1ldGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLE1BQU0sRUFDSkEsY0FBYyxFQUNkQyxpQ0FBaUMsRUFDakNDLDRDQUE0QyxFQUM3QyxHQUFHQyxtQkFBT0EsQ0FBQyxxRUFBWTtBQUV4QkMsT0FBT0MsT0FBTyxHQUFHLE1BQU1DO0lBQ3JCQyxZQUFZQyxHQUFHLENBQUU7UUFDZixJQUFJLENBQUNDLElBQUksR0FBR0Q7SUFDZDtJQUVBLElBQUlFLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQ0QsSUFBSSxDQUFDQyxJQUFJO0lBQ3ZCO0lBRUFDLElBQUlDLElBQUksRUFBRTtRQUNSQSxPQUFPWixlQUFlYSxPQUFPRDtRQUM3QixPQUFPLElBQUksQ0FBQ0gsSUFBSSxDQUFDRSxHQUFHLENBQUNDO0lBQ3ZCO0lBRUFFLElBQUlGLElBQUksRUFBRTtRQUNSQSxPQUFPWixlQUFlYSxPQUFPRDtRQUM3QixPQUFPLElBQUksQ0FBQ0gsSUFBSSxDQUFDSyxHQUFHLENBQUNGO0lBQ3ZCO0lBRUFHLElBQUlILElBQUksRUFBRUksS0FBSyxFQUFFO1FBQ2ZKLE9BQU9aLGVBQWVhLE9BQU9EO1FBQzdCSSxRQUFRSCxPQUFPRztRQUVmLElBQUksQ0FBQ2Ysa0NBQWtDVyxPQUFPO1lBQzVDLE1BQU0sSUFBSUssTUFBTSxDQUFDLGtDQUFrQyxFQUFFTCxLQUFLLHlDQUF5QyxDQUFDO1FBQ3RHO1FBQ0EsSUFBSSxDQUFDViw2Q0FBNkNjLFFBQVE7WUFDeEQsTUFBTSxJQUFJQyxNQUFNLENBQUMsbUNBQW1DLEVBQUVELE1BQU0saURBQWlELENBQUMsR0FDOUYsQ0FBQyxNQUFNLENBQUM7UUFDMUI7UUFFQSxPQUFPLElBQUksQ0FBQ1AsSUFBSSxDQUFDTSxHQUFHLENBQUNILE1BQU1JO0lBQzdCO0lBRUFFLFFBQVE7UUFDTixJQUFJLENBQUNULElBQUksQ0FBQ1MsS0FBSztJQUNqQjtJQUVBQyxPQUFPUCxJQUFJLEVBQUU7UUFDWEEsT0FBT1osZUFBZWEsT0FBT0Q7UUFDN0IsT0FBTyxJQUFJLENBQUNILElBQUksQ0FBQ1UsTUFBTSxDQUFDUDtJQUMxQjtJQUVBUSxRQUFRQyxVQUFVLEVBQUVDLE9BQU8sRUFBRTtRQUMzQixJQUFJLENBQUNiLElBQUksQ0FBQ1csT0FBTyxDQUFDQyxZQUFZQztJQUNoQztJQUVBQyxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUNkLElBQUksQ0FBQ2MsSUFBSTtJQUN2QjtJQUVBQyxTQUFTO1FBQ1AsT0FBTyxJQUFJLENBQUNmLElBQUksQ0FBQ2UsTUFBTTtJQUN6QjtJQUVBQyxVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUNoQixJQUFJLENBQUNnQixPQUFPO0lBQzFCO0lBRUEsQ0FBQ0MsT0FBT0MsUUFBUSxDQUFDLEdBQUc7UUFDbEIsT0FBTyxJQUFJLENBQUNsQixJQUFJLENBQUNpQixPQUFPQyxRQUFRLENBQUM7SUFDbkM7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3BpY3Rpb25hcnktZ2FtZS8uL25vZGVfbW9kdWxlcy93aGF0d2ctbWltZXR5cGUvbGliL21pbWUtdHlwZS1wYXJhbWV0ZXJzLmpzPzExOGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCB7XG4gIGFzY2lpTG93ZXJjYXNlLFxuICBzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMsXG4gIHNvbGV5Q29udGFpbnNIVFRQUXVvdGVkU3RyaW5nVG9rZW5Db2RlUG9pbnRzXG59ID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgTUlNRVR5cGVQYXJhbWV0ZXJzIHtcbiAgY29uc3RydWN0b3IobWFwKSB7XG4gICAgdGhpcy5fbWFwID0gbWFwO1xuICB9XG5cbiAgZ2V0IHNpemUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21hcC5zaXplO1xuICB9XG5cbiAgZ2V0KG5hbWUpIHtcbiAgICBuYW1lID0gYXNjaWlMb3dlcmNhc2UoU3RyaW5nKG5hbWUpKTtcbiAgICByZXR1cm4gdGhpcy5fbWFwLmdldChuYW1lKTtcbiAgfVxuXG4gIGhhcyhuYW1lKSB7XG4gICAgbmFtZSA9IGFzY2lpTG93ZXJjYXNlKFN0cmluZyhuYW1lKSk7XG4gICAgcmV0dXJuIHRoaXMuX21hcC5oYXMobmFtZSk7XG4gIH1cblxuICBzZXQobmFtZSwgdmFsdWUpIHtcbiAgICBuYW1lID0gYXNjaWlMb3dlcmNhc2UoU3RyaW5nKG5hbWUpKTtcbiAgICB2YWx1ZSA9IFN0cmluZyh2YWx1ZSk7XG5cbiAgICBpZiAoIXNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyhuYW1lKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIE1JTUUgdHlwZSBwYXJhbWV0ZXIgbmFtZSBcIiR7bmFtZX1cIjogb25seSBIVFRQIHRva2VuIGNvZGUgcG9pbnRzIGFyZSB2YWxpZC5gKTtcbiAgICB9XG4gICAgaWYgKCFzb2xleUNvbnRhaW5zSFRUUFF1b3RlZFN0cmluZ1Rva2VuQ29kZVBvaW50cyh2YWx1ZSkpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBNSU1FIHR5cGUgcGFyYW1ldGVyIHZhbHVlIFwiJHt2YWx1ZX1cIjogb25seSBIVFRQIHF1b3RlZC1zdHJpbmcgdG9rZW4gY29kZSBwb2ludHMgYXJlIGAgK1xuICAgICAgICAgICAgICAgICAgICAgIGB2YWxpZC5gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fbWFwLnNldChuYW1lLCB2YWx1ZSk7XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLl9tYXAuY2xlYXIoKTtcbiAgfVxuXG4gIGRlbGV0ZShuYW1lKSB7XG4gICAgbmFtZSA9IGFzY2lpTG93ZXJjYXNlKFN0cmluZyhuYW1lKSk7XG4gICAgcmV0dXJuIHRoaXMuX21hcC5kZWxldGUobmFtZSk7XG4gIH1cblxuICBmb3JFYWNoKGNhbGxiYWNrRm4sIHRoaXNBcmcpIHtcbiAgICB0aGlzLl9tYXAuZm9yRWFjaChjYWxsYmFja0ZuLCB0aGlzQXJnKTtcbiAgfVxuXG4gIGtleXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21hcC5rZXlzKCk7XG4gIH1cblxuICB2YWx1ZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21hcC52YWx1ZXMoKTtcbiAgfVxuXG4gIGVudHJpZXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuX21hcC5lbnRyaWVzKCk7XG4gIH1cblxuICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICByZXR1cm4gdGhpcy5fbWFwW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJhc2NpaUxvd2VyY2FzZSIsInNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyIsInNvbGV5Q29udGFpbnNIVFRQUXVvdGVkU3RyaW5nVG9rZW5Db2RlUG9pbnRzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJNSU1FVHlwZVBhcmFtZXRlcnMiLCJjb25zdHJ1Y3RvciIsIm1hcCIsIl9tYXAiLCJzaXplIiwiZ2V0IiwibmFtZSIsIlN0cmluZyIsImhhcyIsInNldCIsInZhbHVlIiwiRXJyb3IiLCJjbGVhciIsImRlbGV0ZSIsImZvckVhY2giLCJjYWxsYmFja0ZuIiwidGhpc0FyZyIsImtleXMiLCJ2YWx1ZXMiLCJlbnRyaWVzIiwiU3ltYm9sIiwiaXRlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/whatwg-mimetype/lib/mime-type-parameters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/whatwg-mimetype/lib/mime-type.js":
/*!*******************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/mime-type.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst MIMETypeParameters = __webpack_require__(/*! ./mime-type-parameters.js */ \"(ssr)/./node_modules/whatwg-mimetype/lib/mime-type-parameters.js\");\nconst parse = __webpack_require__(/*! ./parser.js */ \"(ssr)/./node_modules/whatwg-mimetype/lib/parser.js\");\nconst serialize = __webpack_require__(/*! ./serializer.js */ \"(ssr)/./node_modules/whatwg-mimetype/lib/serializer.js\");\nconst { asciiLowercase, solelyContainsHTTPTokenCodePoints } = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = class MIMEType {\n    constructor(string){\n        string = String(string);\n        const result = parse(string);\n        if (result === null) {\n            throw new Error(`Could not parse MIME type string \"${string}\"`);\n        }\n        this._type = result.type;\n        this._subtype = result.subtype;\n        this._parameters = new MIMETypeParameters(result.parameters);\n    }\n    static parse(string) {\n        try {\n            return new this(string);\n        } catch (e) {\n            return null;\n        }\n    }\n    get essence() {\n        return `${this.type}/${this.subtype}`;\n    }\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        value = asciiLowercase(String(value));\n        if (value.length === 0) {\n            throw new Error(\"Invalid type: must be a non-empty string\");\n        }\n        if (!solelyContainsHTTPTokenCodePoints(value)) {\n            throw new Error(`Invalid type ${value}: must contain only HTTP token code points`);\n        }\n        this._type = value;\n    }\n    get subtype() {\n        return this._subtype;\n    }\n    set subtype(value) {\n        value = asciiLowercase(String(value));\n        if (value.length === 0) {\n            throw new Error(\"Invalid subtype: must be a non-empty string\");\n        }\n        if (!solelyContainsHTTPTokenCodePoints(value)) {\n            throw new Error(`Invalid subtype ${value}: must contain only HTTP token code points`);\n        }\n        this._subtype = value;\n    }\n    get parameters() {\n        return this._parameters;\n    }\n    toString() {\n        // The serialize function works on both \"MIME type records\" (i.e. the results of parse) and on this class, since\n        // this class's interface is identical.\n        return serialize(this);\n    }\n    isJavaScript({ prohibitParameters = false } = {}) {\n        switch(this._type){\n            case \"text\":\n                {\n                    switch(this._subtype){\n                        case \"ecmascript\":\n                        case \"javascript\":\n                        case \"javascript1.0\":\n                        case \"javascript1.1\":\n                        case \"javascript1.2\":\n                        case \"javascript1.3\":\n                        case \"javascript1.4\":\n                        case \"javascript1.5\":\n                        case \"jscript\":\n                        case \"livescript\":\n                        case \"x-ecmascript\":\n                        case \"x-javascript\":\n                            {\n                                return !prohibitParameters || this._parameters.size === 0;\n                            }\n                        default:\n                            {\n                                return false;\n                            }\n                    }\n                }\n            case \"application\":\n                {\n                    switch(this._subtype){\n                        case \"ecmascript\":\n                        case \"javascript\":\n                        case \"x-ecmascript\":\n                        case \"x-javascript\":\n                            {\n                                return !prohibitParameters || this._parameters.size === 0;\n                            }\n                        default:\n                            {\n                                return false;\n                            }\n                    }\n                }\n            default:\n                {\n                    return false;\n                }\n        }\n    }\n    isXML() {\n        return this._subtype === \"xml\" && (this._type === \"text\" || this._type === \"application\") || this._subtype.endsWith(\"+xml\");\n    }\n    isHTML() {\n        return this._subtype === \"html\" && this._type === \"text\";\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/whatwg-mimetype/lib/mime-type.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/whatwg-mimetype/lib/parser.js":
/*!****************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/parser.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { removeLeadingAndTrailingHTTPWhitespace, removeTrailingHTTPWhitespace, isHTTPWhitespaceChar, solelyContainsHTTPTokenCodePoints, soleyContainsHTTPQuotedStringTokenCodePoints, asciiLowercase, collectAnHTTPQuotedString } = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = (input)=>{\n    input = removeLeadingAndTrailingHTTPWhitespace(input);\n    let position = 0;\n    let type = \"\";\n    while(position < input.length && input[position] !== \"/\"){\n        type += input[position];\n        ++position;\n    }\n    if (type.length === 0 || !solelyContainsHTTPTokenCodePoints(type)) {\n        return null;\n    }\n    if (position >= input.length) {\n        return null;\n    }\n    // Skips past \"/\"\n    ++position;\n    let subtype = \"\";\n    while(position < input.length && input[position] !== \";\"){\n        subtype += input[position];\n        ++position;\n    }\n    subtype = removeTrailingHTTPWhitespace(subtype);\n    if (subtype.length === 0 || !solelyContainsHTTPTokenCodePoints(subtype)) {\n        return null;\n    }\n    const mimeType = {\n        type: asciiLowercase(type),\n        subtype: asciiLowercase(subtype),\n        parameters: new Map()\n    };\n    while(position < input.length){\n        // Skip past \";\"\n        ++position;\n        while(isHTTPWhitespaceChar(input[position])){\n            ++position;\n        }\n        let parameterName = \"\";\n        while(position < input.length && input[position] !== \";\" && input[position] !== \"=\"){\n            parameterName += input[position];\n            ++position;\n        }\n        parameterName = asciiLowercase(parameterName);\n        if (position < input.length) {\n            if (input[position] === \";\") {\n                continue;\n            }\n            // Skip past \"=\"\n            ++position;\n        }\n        let parameterValue = null;\n        if (input[position] === '\"') {\n            [parameterValue, position] = collectAnHTTPQuotedString(input, position);\n            while(position < input.length && input[position] !== \";\"){\n                ++position;\n            }\n        } else {\n            parameterValue = \"\";\n            while(position < input.length && input[position] !== \";\"){\n                parameterValue += input[position];\n                ++position;\n            }\n            parameterValue = removeTrailingHTTPWhitespace(parameterValue);\n            if (parameterValue === \"\") {\n                continue;\n            }\n        }\n        if (parameterName.length > 0 && solelyContainsHTTPTokenCodePoints(parameterName) && soleyContainsHTTPQuotedStringTokenCodePoints(parameterValue) && !mimeType.parameters.has(parameterName)) {\n            mimeType.parameters.set(parameterName, parameterValue);\n        }\n    }\n    return mimeType;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9wYXJzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixNQUFNLEVBQ0pBLHNDQUFzQyxFQUN0Q0MsNEJBQTRCLEVBQzVCQyxvQkFBb0IsRUFDcEJDLGlDQUFpQyxFQUNqQ0MsNENBQTRDLEVBQzVDQyxjQUFjLEVBQ2RDLHlCQUF5QixFQUMxQixHQUFHQyxtQkFBT0EsQ0FBQyxxRUFBWTtBQUV4QkMsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNmQSxRQUFRVix1Q0FBdUNVO0lBRS9DLElBQUlDLFdBQVc7SUFDZixJQUFJQyxPQUFPO0lBQ1gsTUFBT0QsV0FBV0QsTUFBTUcsTUFBTSxJQUFJSCxLQUFLLENBQUNDLFNBQVMsS0FBSyxJQUFLO1FBQ3pEQyxRQUFRRixLQUFLLENBQUNDLFNBQVM7UUFDdkIsRUFBRUE7SUFDSjtJQUVBLElBQUlDLEtBQUtDLE1BQU0sS0FBSyxLQUFLLENBQUNWLGtDQUFrQ1MsT0FBTztRQUNqRSxPQUFPO0lBQ1Q7SUFFQSxJQUFJRCxZQUFZRCxNQUFNRyxNQUFNLEVBQUU7UUFDNUIsT0FBTztJQUNUO0lBRUEsaUJBQWlCO0lBQ2pCLEVBQUVGO0lBRUYsSUFBSUcsVUFBVTtJQUNkLE1BQU9ILFdBQVdELE1BQU1HLE1BQU0sSUFBSUgsS0FBSyxDQUFDQyxTQUFTLEtBQUssSUFBSztRQUN6REcsV0FBV0osS0FBSyxDQUFDQyxTQUFTO1FBQzFCLEVBQUVBO0lBQ0o7SUFFQUcsVUFBVWIsNkJBQTZCYTtJQUV2QyxJQUFJQSxRQUFRRCxNQUFNLEtBQUssS0FBSyxDQUFDVixrQ0FBa0NXLFVBQVU7UUFDdkUsT0FBTztJQUNUO0lBRUEsTUFBTUMsV0FBVztRQUNmSCxNQUFNUCxlQUFlTztRQUNyQkUsU0FBU1QsZUFBZVM7UUFDeEJFLFlBQVksSUFBSUM7SUFDbEI7SUFFQSxNQUFPTixXQUFXRCxNQUFNRyxNQUFNLENBQUU7UUFDOUIsZ0JBQWdCO1FBQ2hCLEVBQUVGO1FBRUYsTUFBT1QscUJBQXFCUSxLQUFLLENBQUNDLFNBQVMsRUFBRztZQUM1QyxFQUFFQTtRQUNKO1FBRUEsSUFBSU8sZ0JBQWdCO1FBQ3BCLE1BQU9QLFdBQVdELE1BQU1HLE1BQU0sSUFBSUgsS0FBSyxDQUFDQyxTQUFTLEtBQUssT0FBT0QsS0FBSyxDQUFDQyxTQUFTLEtBQUssSUFBSztZQUNwRk8saUJBQWlCUixLQUFLLENBQUNDLFNBQVM7WUFDaEMsRUFBRUE7UUFDSjtRQUNBTyxnQkFBZ0JiLGVBQWVhO1FBRS9CLElBQUlQLFdBQVdELE1BQU1HLE1BQU0sRUFBRTtZQUMzQixJQUFJSCxLQUFLLENBQUNDLFNBQVMsS0FBSyxLQUFLO2dCQUMzQjtZQUNGO1lBRUEsZ0JBQWdCO1lBQ2hCLEVBQUVBO1FBQ0o7UUFFQSxJQUFJUSxpQkFBaUI7UUFDckIsSUFBSVQsS0FBSyxDQUFDQyxTQUFTLEtBQUssS0FBTTtZQUM1QixDQUFDUSxnQkFBZ0JSLFNBQVMsR0FBR0wsMEJBQTBCSSxPQUFPQztZQUU5RCxNQUFPQSxXQUFXRCxNQUFNRyxNQUFNLElBQUlILEtBQUssQ0FBQ0MsU0FBUyxLQUFLLElBQUs7Z0JBQ3pELEVBQUVBO1lBQ0o7UUFDRixPQUFPO1lBQ0xRLGlCQUFpQjtZQUNqQixNQUFPUixXQUFXRCxNQUFNRyxNQUFNLElBQUlILEtBQUssQ0FBQ0MsU0FBUyxLQUFLLElBQUs7Z0JBQ3pEUSxrQkFBa0JULEtBQUssQ0FBQ0MsU0FBUztnQkFDakMsRUFBRUE7WUFDSjtZQUVBUSxpQkFBaUJsQiw2QkFBNkJrQjtZQUU5QyxJQUFJQSxtQkFBbUIsSUFBSTtnQkFDekI7WUFDRjtRQUNGO1FBRUEsSUFBSUQsY0FBY0wsTUFBTSxHQUFHLEtBQ3ZCVixrQ0FBa0NlLGtCQUNsQ2QsNkNBQTZDZSxtQkFDN0MsQ0FBQ0osU0FBU0MsVUFBVSxDQUFDSSxHQUFHLENBQUNGLGdCQUFnQjtZQUMzQ0gsU0FBU0MsVUFBVSxDQUFDSyxHQUFHLENBQUNILGVBQWVDO1FBQ3pDO0lBQ0Y7SUFFQSxPQUFPSjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGljdGlvbmFyeS1nYW1lLy4vbm9kZV9tb2R1bGVzL3doYXR3Zy1taW1ldHlwZS9saWIvcGFyc2VyLmpzPzlmNjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCB7XG4gIHJlbW92ZUxlYWRpbmdBbmRUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlLFxuICByZW1vdmVUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlLFxuICBpc0hUVFBXaGl0ZXNwYWNlQ2hhcixcbiAgc29sZWx5Q29udGFpbnNIVFRQVG9rZW5Db2RlUG9pbnRzLFxuICBzb2xleUNvbnRhaW5zSFRUUFF1b3RlZFN0cmluZ1Rva2VuQ29kZVBvaW50cyxcbiAgYXNjaWlMb3dlcmNhc2UsXG4gIGNvbGxlY3RBbkhUVFBRdW90ZWRTdHJpbmdcbn0gPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnB1dCA9PiB7XG4gIGlucHV0ID0gcmVtb3ZlTGVhZGluZ0FuZFRyYWlsaW5nSFRUUFdoaXRlc3BhY2UoaW5wdXQpO1xuXG4gIGxldCBwb3NpdGlvbiA9IDA7XG4gIGxldCB0eXBlID0gXCJcIjtcbiAgd2hpbGUgKHBvc2l0aW9uIDwgaW5wdXQubGVuZ3RoICYmIGlucHV0W3Bvc2l0aW9uXSAhPT0gXCIvXCIpIHtcbiAgICB0eXBlICs9IGlucHV0W3Bvc2l0aW9uXTtcbiAgICArK3Bvc2l0aW9uO1xuICB9XG5cbiAgaWYgKHR5cGUubGVuZ3RoID09PSAwIHx8ICFzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHModHlwZSkpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGlmIChwb3NpdGlvbiA+PSBpbnB1dC5sZW5ndGgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIC8vIFNraXBzIHBhc3QgXCIvXCJcbiAgKytwb3NpdGlvbjtcblxuICBsZXQgc3VidHlwZSA9IFwiXCI7XG4gIHdoaWxlIChwb3NpdGlvbiA8IGlucHV0Lmxlbmd0aCAmJiBpbnB1dFtwb3NpdGlvbl0gIT09IFwiO1wiKSB7XG4gICAgc3VidHlwZSArPSBpbnB1dFtwb3NpdGlvbl07XG4gICAgKytwb3NpdGlvbjtcbiAgfVxuXG4gIHN1YnR5cGUgPSByZW1vdmVUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlKHN1YnR5cGUpO1xuXG4gIGlmIChzdWJ0eXBlLmxlbmd0aCA9PT0gMCB8fCAhc29sZWx5Q29udGFpbnNIVFRQVG9rZW5Db2RlUG9pbnRzKHN1YnR5cGUpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCBtaW1lVHlwZSA9IHtcbiAgICB0eXBlOiBhc2NpaUxvd2VyY2FzZSh0eXBlKSxcbiAgICBzdWJ0eXBlOiBhc2NpaUxvd2VyY2FzZShzdWJ0eXBlKSxcbiAgICBwYXJhbWV0ZXJzOiBuZXcgTWFwKClcbiAgfTtcblxuICB3aGlsZSAocG9zaXRpb24gPCBpbnB1dC5sZW5ndGgpIHtcbiAgICAvLyBTa2lwIHBhc3QgXCI7XCJcbiAgICArK3Bvc2l0aW9uO1xuXG4gICAgd2hpbGUgKGlzSFRUUFdoaXRlc3BhY2VDaGFyKGlucHV0W3Bvc2l0aW9uXSkpIHtcbiAgICAgICsrcG9zaXRpb247XG4gICAgfVxuXG4gICAgbGV0IHBhcmFtZXRlck5hbWUgPSBcIlwiO1xuICAgIHdoaWxlIChwb3NpdGlvbiA8IGlucHV0Lmxlbmd0aCAmJiBpbnB1dFtwb3NpdGlvbl0gIT09IFwiO1wiICYmIGlucHV0W3Bvc2l0aW9uXSAhPT0gXCI9XCIpIHtcbiAgICAgIHBhcmFtZXRlck5hbWUgKz0gaW5wdXRbcG9zaXRpb25dO1xuICAgICAgKytwb3NpdGlvbjtcbiAgICB9XG4gICAgcGFyYW1ldGVyTmFtZSA9IGFzY2lpTG93ZXJjYXNlKHBhcmFtZXRlck5hbWUpO1xuXG4gICAgaWYgKHBvc2l0aW9uIDwgaW5wdXQubGVuZ3RoKSB7XG4gICAgICBpZiAoaW5wdXRbcG9zaXRpb25dID09PSBcIjtcIikge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgLy8gU2tpcCBwYXN0IFwiPVwiXG4gICAgICArK3Bvc2l0aW9uO1xuICAgIH1cblxuICAgIGxldCBwYXJhbWV0ZXJWYWx1ZSA9IG51bGw7XG4gICAgaWYgKGlucHV0W3Bvc2l0aW9uXSA9PT0gXCJcXFwiXCIpIHtcbiAgICAgIFtwYXJhbWV0ZXJWYWx1ZSwgcG9zaXRpb25dID0gY29sbGVjdEFuSFRUUFF1b3RlZFN0cmluZyhpbnB1dCwgcG9zaXRpb24pO1xuXG4gICAgICB3aGlsZSAocG9zaXRpb24gPCBpbnB1dC5sZW5ndGggJiYgaW5wdXRbcG9zaXRpb25dICE9PSBcIjtcIikge1xuICAgICAgICArK3Bvc2l0aW9uO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBwYXJhbWV0ZXJWYWx1ZSA9IFwiXCI7XG4gICAgICB3aGlsZSAocG9zaXRpb24gPCBpbnB1dC5sZW5ndGggJiYgaW5wdXRbcG9zaXRpb25dICE9PSBcIjtcIikge1xuICAgICAgICBwYXJhbWV0ZXJWYWx1ZSArPSBpbnB1dFtwb3NpdGlvbl07XG4gICAgICAgICsrcG9zaXRpb247XG4gICAgICB9XG5cbiAgICAgIHBhcmFtZXRlclZhbHVlID0gcmVtb3ZlVHJhaWxpbmdIVFRQV2hpdGVzcGFjZShwYXJhbWV0ZXJWYWx1ZSk7XG5cbiAgICAgIGlmIChwYXJhbWV0ZXJWYWx1ZSA9PT0gXCJcIikge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAocGFyYW1ldGVyTmFtZS5sZW5ndGggPiAwICYmXG4gICAgICAgIHNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyhwYXJhbWV0ZXJOYW1lKSAmJlxuICAgICAgICBzb2xleUNvbnRhaW5zSFRUUFF1b3RlZFN0cmluZ1Rva2VuQ29kZVBvaW50cyhwYXJhbWV0ZXJWYWx1ZSkgJiZcbiAgICAgICAgIW1pbWVUeXBlLnBhcmFtZXRlcnMuaGFzKHBhcmFtZXRlck5hbWUpKSB7XG4gICAgICBtaW1lVHlwZS5wYXJhbWV0ZXJzLnNldChwYXJhbWV0ZXJOYW1lLCBwYXJhbWV0ZXJWYWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG1pbWVUeXBlO1xufTtcbiJdLCJuYW1lcyI6WyJyZW1vdmVMZWFkaW5nQW5kVHJhaWxpbmdIVFRQV2hpdGVzcGFjZSIsInJlbW92ZVRyYWlsaW5nSFRUUFdoaXRlc3BhY2UiLCJpc0hUVFBXaGl0ZXNwYWNlQ2hhciIsInNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyIsInNvbGV5Q29udGFpbnNIVFRQUXVvdGVkU3RyaW5nVG9rZW5Db2RlUG9pbnRzIiwiYXNjaWlMb3dlcmNhc2UiLCJjb2xsZWN0QW5IVFRQUXVvdGVkU3RyaW5nIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJpbnB1dCIsInBvc2l0aW9uIiwidHlwZSIsImxlbmd0aCIsInN1YnR5cGUiLCJtaW1lVHlwZSIsInBhcmFtZXRlcnMiLCJNYXAiLCJwYXJhbWV0ZXJOYW1lIiwicGFyYW1ldGVyVmFsdWUiLCJoYXMiLCJzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/whatwg-mimetype/lib/parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/whatwg-mimetype/lib/serializer.js":
/*!********************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/serializer.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { solelyContainsHTTPTokenCodePoints } = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/whatwg-mimetype/lib/utils.js\");\nmodule.exports = (mimeType)=>{\n    let serialization = `${mimeType.type}/${mimeType.subtype}`;\n    if (mimeType.parameters.size === 0) {\n        return serialization;\n    }\n    for (let [name, value] of mimeType.parameters){\n        serialization += \";\";\n        serialization += name;\n        serialization += \"=\";\n        if (!solelyContainsHTTPTokenCodePoints(value) || value.length === 0) {\n            value = value.replace(/([\"\\\\])/ug, \"\\\\$1\");\n            value = `\"${value}\"`;\n        }\n        serialization += value;\n    }\n    return serialization;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9zZXJpYWxpemVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsTUFBTSxFQUFFQSxpQ0FBaUMsRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQyxxRUFBWTtBQUVsRUMsT0FBT0MsT0FBTyxHQUFHQyxDQUFBQTtJQUNmLElBQUlDLGdCQUFnQixDQUFDLEVBQUVELFNBQVNFLElBQUksQ0FBQyxDQUFDLEVBQUVGLFNBQVNHLE9BQU8sQ0FBQyxDQUFDO0lBRTFELElBQUlILFNBQVNJLFVBQVUsQ0FBQ0MsSUFBSSxLQUFLLEdBQUc7UUFDbEMsT0FBT0o7SUFDVDtJQUVBLEtBQUssSUFBSSxDQUFDSyxNQUFNQyxNQUFNLElBQUlQLFNBQVNJLFVBQVUsQ0FBRTtRQUM3Q0gsaUJBQWlCO1FBQ2pCQSxpQkFBaUJLO1FBQ2pCTCxpQkFBaUI7UUFFakIsSUFBSSxDQUFDTCxrQ0FBa0NXLFVBQVVBLE1BQU1DLE1BQU0sS0FBSyxHQUFHO1lBQ25FRCxRQUFRQSxNQUFNRSxPQUFPLENBQUMsYUFBYTtZQUNuQ0YsUUFBUSxDQUFDLENBQUMsRUFBRUEsTUFBTSxDQUFDLENBQUM7UUFDdEI7UUFFQU4saUJBQWlCTTtJQUNuQjtJQUVBLE9BQU9OO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9waWN0aW9uYXJ5LWdhbWUvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi9zZXJpYWxpemVyLmpzPzUyN2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5jb25zdCB7IHNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyB9ID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gbWltZVR5cGUgPT4ge1xuICBsZXQgc2VyaWFsaXphdGlvbiA9IGAke21pbWVUeXBlLnR5cGV9LyR7bWltZVR5cGUuc3VidHlwZX1gO1xuXG4gIGlmIChtaW1lVHlwZS5wYXJhbWV0ZXJzLnNpemUgPT09IDApIHtcbiAgICByZXR1cm4gc2VyaWFsaXphdGlvbjtcbiAgfVxuXG4gIGZvciAobGV0IFtuYW1lLCB2YWx1ZV0gb2YgbWltZVR5cGUucGFyYW1ldGVycykge1xuICAgIHNlcmlhbGl6YXRpb24gKz0gXCI7XCI7XG4gICAgc2VyaWFsaXphdGlvbiArPSBuYW1lO1xuICAgIHNlcmlhbGl6YXRpb24gKz0gXCI9XCI7XG5cbiAgICBpZiAoIXNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyh2YWx1ZSkgfHwgdmFsdWUubGVuZ3RoID09PSAwKSB7XG4gICAgICB2YWx1ZSA9IHZhbHVlLnJlcGxhY2UoLyhbXCJcXFxcXSkvdWcsIFwiXFxcXCQxXCIpO1xuICAgICAgdmFsdWUgPSBgXCIke3ZhbHVlfVwiYDtcbiAgICB9XG5cbiAgICBzZXJpYWxpemF0aW9uICs9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHNlcmlhbGl6YXRpb247XG59O1xuIl0sIm5hbWVzIjpbInNvbGVseUNvbnRhaW5zSFRUUFRva2VuQ29kZVBvaW50cyIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibWltZVR5cGUiLCJzZXJpYWxpemF0aW9uIiwidHlwZSIsInN1YnR5cGUiLCJwYXJhbWV0ZXJzIiwic2l6ZSIsIm5hbWUiLCJ2YWx1ZSIsImxlbmd0aCIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/whatwg-mimetype/lib/serializer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/whatwg-mimetype/lib/utils.js":
/*!***************************************************!*\
  !*** ./node_modules/whatwg-mimetype/lib/utils.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nexports.removeLeadingAndTrailingHTTPWhitespace = (string)=>{\n    return string.replace(/^[ \\t\\n\\r]+/u, \"\").replace(/[ \\t\\n\\r]+$/u, \"\");\n};\nexports.removeTrailingHTTPWhitespace = (string)=>{\n    return string.replace(/[ \\t\\n\\r]+$/u, \"\");\n};\nexports.isHTTPWhitespaceChar = (char)=>{\n    return char === \" \" || char === \"\t\" || char === \"\\n\" || char === \"\\r\";\n};\nexports.solelyContainsHTTPTokenCodePoints = (string)=>{\n    return /^[-!#$%&'*+.^_`|~A-Za-z0-9]*$/u.test(string);\n};\nexports.soleyContainsHTTPQuotedStringTokenCodePoints = (string)=>{\n    return /^[\\t\\u0020-\\u007E\\u0080-\\u00FF]*$/u.test(string);\n};\nexports.asciiLowercase = (string)=>{\n    return string.replace(/[A-Z]/ug, (l)=>l.toLowerCase());\n};\n// This variant only implements it with the extract-value flag set.\nexports.collectAnHTTPQuotedString = (input, position)=>{\n    let value = \"\";\n    position++;\n    while(true){\n        while(position < input.length && input[position] !== '\"' && input[position] !== \"\\\\\"){\n            value += input[position];\n            ++position;\n        }\n        if (position >= input.length) {\n            break;\n        }\n        const quoteOrBackslash = input[position];\n        ++position;\n        if (quoteOrBackslash === \"\\\\\") {\n            if (position >= input.length) {\n                value += \"\\\\\";\n                break;\n            }\n            value += input[position];\n            ++position;\n        } else {\n            break;\n        }\n    }\n    return [\n        value,\n        position\n    ];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2hhdHdnLW1pbWV0eXBlL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBOEMsR0FBR0UsQ0FBQUE7SUFDL0MsT0FBT0EsT0FBT0MsT0FBTyxDQUFDLGdCQUFnQixJQUFJQSxPQUFPLENBQUMsZ0JBQWdCO0FBQ3BFO0FBRUFILG9DQUFvQyxHQUFHRSxDQUFBQTtJQUNyQyxPQUFPQSxPQUFPQyxPQUFPLENBQUMsZ0JBQWdCO0FBQ3hDO0FBRUFILDRCQUE0QixHQUFHTSxDQUFBQTtJQUM3QixPQUFPQSxTQUFTLE9BQU9BLFNBQVMsT0FBUUEsU0FBUyxRQUFRQSxTQUFTO0FBQ3BFO0FBRUFOLHlDQUF5QyxHQUFHRSxDQUFBQTtJQUMxQyxPQUFPLGlDQUFpQ00sSUFBSSxDQUFDTjtBQUMvQztBQUVBRixvREFBb0QsR0FBR0UsQ0FBQUE7SUFDckQsT0FBTyxxQ0FBcUNNLElBQUksQ0FBQ047QUFDbkQ7QUFFQUYsc0JBQXNCLEdBQUdFLENBQUFBO0lBQ3ZCLE9BQU9BLE9BQU9DLE9BQU8sQ0FBQyxXQUFXUSxDQUFBQSxJQUFLQSxFQUFFQyxXQUFXO0FBQ3JEO0FBRUEsbUVBQW1FO0FBQ25FWixpQ0FBaUMsR0FBRyxDQUFDYyxPQUFPQztJQUMxQyxJQUFJQyxRQUFRO0lBRVpEO0lBRUEsTUFBTyxLQUFNO1FBQ1gsTUFBT0EsV0FBV0QsTUFBTUcsTUFBTSxJQUFJSCxLQUFLLENBQUNDLFNBQVMsS0FBSyxPQUFRRCxLQUFLLENBQUNDLFNBQVMsS0FBSyxLQUFNO1lBQ3RGQyxTQUFTRixLQUFLLENBQUNDLFNBQVM7WUFDeEIsRUFBRUE7UUFDSjtRQUVBLElBQUlBLFlBQVlELE1BQU1HLE1BQU0sRUFBRTtZQUM1QjtRQUNGO1FBRUEsTUFBTUMsbUJBQW1CSixLQUFLLENBQUNDLFNBQVM7UUFDeEMsRUFBRUE7UUFFRixJQUFJRyxxQkFBcUIsTUFBTTtZQUM3QixJQUFJSCxZQUFZRCxNQUFNRyxNQUFNLEVBQUU7Z0JBQzVCRCxTQUFTO2dCQUNUO1lBQ0Y7WUFFQUEsU0FBU0YsS0FBSyxDQUFDQyxTQUFTO1lBQ3hCLEVBQUVBO1FBQ0osT0FBTztZQUNMO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFBQ0M7UUFBT0Q7S0FBUztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3BpY3Rpb25hcnktZ2FtZS8uL25vZGVfbW9kdWxlcy93aGF0d2ctbWltZXR5cGUvbGliL3V0aWxzLmpzPzY4OTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMucmVtb3ZlTGVhZGluZ0FuZFRyYWlsaW5nSFRUUFdoaXRlc3BhY2UgPSBzdHJpbmcgPT4ge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2UoL15bIFxcdFxcblxccl0rL3UsIFwiXCIpLnJlcGxhY2UoL1sgXFx0XFxuXFxyXSskL3UsIFwiXCIpO1xufTtcblxuZXhwb3J0cy5yZW1vdmVUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlID0gc3RyaW5nID0+IHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9bIFxcdFxcblxccl0rJC91LCBcIlwiKTtcbn07XG5cbmV4cG9ydHMuaXNIVFRQV2hpdGVzcGFjZUNoYXIgPSBjaGFyID0+IHtcbiAgcmV0dXJuIGNoYXIgPT09IFwiIFwiIHx8IGNoYXIgPT09IFwiXFx0XCIgfHwgY2hhciA9PT0gXCJcXG5cIiB8fCBjaGFyID09PSBcIlxcclwiO1xufTtcblxuZXhwb3J0cy5zb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMgPSBzdHJpbmcgPT4ge1xuICByZXR1cm4gL15bLSEjJCUmJyorLl5fYHx+QS1aYS16MC05XSokL3UudGVzdChzdHJpbmcpO1xufTtcblxuZXhwb3J0cy5zb2xleUNvbnRhaW5zSFRUUFF1b3RlZFN0cmluZ1Rva2VuQ29kZVBvaW50cyA9IHN0cmluZyA9PiB7XG4gIHJldHVybiAvXltcXHRcXHUwMDIwLVxcdTAwN0VcXHUwMDgwLVxcdTAwRkZdKiQvdS50ZXN0KHN0cmluZyk7XG59O1xuXG5leHBvcnRzLmFzY2lpTG93ZXJjYXNlID0gc3RyaW5nID0+IHtcbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9bQS1aXS91ZywgbCA9PiBsLnRvTG93ZXJDYXNlKCkpO1xufTtcblxuLy8gVGhpcyB2YXJpYW50IG9ubHkgaW1wbGVtZW50cyBpdCB3aXRoIHRoZSBleHRyYWN0LXZhbHVlIGZsYWcgc2V0LlxuZXhwb3J0cy5jb2xsZWN0QW5IVFRQUXVvdGVkU3RyaW5nID0gKGlucHV0LCBwb3NpdGlvbikgPT4ge1xuICBsZXQgdmFsdWUgPSBcIlwiO1xuXG4gIHBvc2l0aW9uKys7XG5cbiAgd2hpbGUgKHRydWUpIHtcbiAgICB3aGlsZSAocG9zaXRpb24gPCBpbnB1dC5sZW5ndGggJiYgaW5wdXRbcG9zaXRpb25dICE9PSBcIlxcXCJcIiAmJiBpbnB1dFtwb3NpdGlvbl0gIT09IFwiXFxcXFwiKSB7XG4gICAgICB2YWx1ZSArPSBpbnB1dFtwb3NpdGlvbl07XG4gICAgICArK3Bvc2l0aW9uO1xuICAgIH1cblxuICAgIGlmIChwb3NpdGlvbiA+PSBpbnB1dC5sZW5ndGgpIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGNvbnN0IHF1b3RlT3JCYWNrc2xhc2ggPSBpbnB1dFtwb3NpdGlvbl07XG4gICAgKytwb3NpdGlvbjtcblxuICAgIGlmIChxdW90ZU9yQmFja3NsYXNoID09PSBcIlxcXFxcIikge1xuICAgICAgaWYgKHBvc2l0aW9uID49IGlucHV0Lmxlbmd0aCkge1xuICAgICAgICB2YWx1ZSArPSBcIlxcXFxcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIHZhbHVlICs9IGlucHV0W3Bvc2l0aW9uXTtcbiAgICAgICsrcG9zaXRpb247XG4gICAgfSBlbHNlIHtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBbdmFsdWUsIHBvc2l0aW9uXTtcbn07XG4iXSwibmFtZXMiOlsiZXhwb3J0cyIsInJlbW92ZUxlYWRpbmdBbmRUcmFpbGluZ0hUVFBXaGl0ZXNwYWNlIiwic3RyaW5nIiwicmVwbGFjZSIsInJlbW92ZVRyYWlsaW5nSFRUUFdoaXRlc3BhY2UiLCJpc0hUVFBXaGl0ZXNwYWNlQ2hhciIsImNoYXIiLCJzb2xlbHlDb250YWluc0hUVFBUb2tlbkNvZGVQb2ludHMiLCJ0ZXN0Iiwic29sZXlDb250YWluc0hUVFBRdW90ZWRTdHJpbmdUb2tlbkNvZGVQb2ludHMiLCJhc2NpaUxvd2VyY2FzZSIsImwiLCJ0b0xvd2VyQ2FzZSIsImNvbGxlY3RBbkhUVFBRdW90ZWRTdHJpbmciLCJpbnB1dCIsInBvc2l0aW9uIiwidmFsdWUiLCJsZW5ndGgiLCJxdW90ZU9yQmFja3NsYXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/whatwg-mimetype/lib/utils.js\n");

/***/ })

};
;