"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/tldts-core";
exports.ids = ["vendor-chunks/tldts-core"];
exports.modules = {

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/index.js":
/*!***************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fastPathLookup: () => (/* reexport safe */ _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   getEmptyResult: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.getEmptyResult),\n/* harmony export */   parseImpl: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.parseImpl),\n/* harmony export */   resetResult: () => (/* reexport safe */ _src_factory__WEBPACK_IMPORTED_MODULE_0__.resetResult),\n/* harmony export */   setDefaults: () => (/* reexport safe */ _src_options__WEBPACK_IMPORTED_MODULE_2__.setDefaults)\n/* harmony export */ });\n/* harmony import */ var _src_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/factory */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js\");\n/* harmony import */ var _src_lookup_fast_path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/lookup/fast-path */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\");\n/* harmony import */ var _src_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/options */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\");\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3RTtBQUNMO0FBQ3ZCLENBQzVDLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BpY3Rpb25hcnktZ2FtZS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L2luZGV4LmpzPzhiMTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgcGFyc2VJbXBsLCBnZXRFbXB0eVJlc3VsdCwgcmVzZXRSZXN1bHQsIH0gZnJvbSAnLi9zcmMvZmFjdG9yeSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGZhc3RQYXRoTG9va3VwIH0gZnJvbSAnLi9zcmMvbG9va3VwL2Zhc3QtcGF0aCc7XG5leHBvcnQgeyBzZXREZWZhdWx0cyB9IGZyb20gJy4vc3JjL29wdGlvbnMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbInBhcnNlSW1wbCIsImdldEVtcHR5UmVzdWx0IiwicmVzZXRSZXN1bHQiLCJkZWZhdWx0IiwiZmFzdFBhdGhMb29rdXAiLCJzZXREZWZhdWx0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDomainWithoutSuffix)\n/* harmony export */ });\n/**\n * Return the part of domain without suffix.\n *\n * Example: for domain 'foo.com', the result would be 'foo'.\n */ function getDomainWithoutSuffix(domain, suffix) {\n    // Note: here `domain` and `suffix` cannot have the same length because in\n    // this case we set `domain` to `null` instead. It is thus safe to assume\n    // that `suffix` is shorter than `domain`.\n    return domain.slice(0, -suffix.length - 1);\n} //# sourceMappingURL=domain-without-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZG9tYWluLXdpdGhvdXQtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBQ2MsU0FBU0EsdUJBQXVCQyxNQUFNLEVBQUVDLE1BQU07SUFDekQsMEVBQTBFO0lBQzFFLHlFQUF5RTtJQUN6RSwwQ0FBMEM7SUFDMUMsT0FBT0QsT0FBT0UsS0FBSyxDQUFDLEdBQUcsQ0FBQ0QsT0FBT0UsTUFBTSxHQUFHO0FBQzVDLEVBQ0EsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGljdGlvbmFyeS1nYW1lLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2RvbWFpbi13aXRob3V0LXN1ZmZpeC5qcz8yZGIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJuIHRoZSBwYXJ0IG9mIGRvbWFpbiB3aXRob3V0IHN1ZmZpeC5cbiAqXG4gKiBFeGFtcGxlOiBmb3IgZG9tYWluICdmb28uY29tJywgdGhlIHJlc3VsdCB3b3VsZCBiZSAnZm9vJy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0RG9tYWluV2l0aG91dFN1ZmZpeChkb21haW4sIHN1ZmZpeCkge1xuICAgIC8vIE5vdGU6IGhlcmUgYGRvbWFpbmAgYW5kIGBzdWZmaXhgIGNhbm5vdCBoYXZlIHRoZSBzYW1lIGxlbmd0aCBiZWNhdXNlIGluXG4gICAgLy8gdGhpcyBjYXNlIHdlIHNldCBgZG9tYWluYCB0byBgbnVsbGAgaW5zdGVhZC4gSXQgaXMgdGh1cyBzYWZlIHRvIGFzc3VtZVxuICAgIC8vIHRoYXQgYHN1ZmZpeGAgaXMgc2hvcnRlciB0aGFuIGBkb21haW5gLlxuICAgIHJldHVybiBkb21haW4uc2xpY2UoMCwgLXN1ZmZpeC5sZW5ndGggLSAxKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvbWFpbi13aXRob3V0LXN1ZmZpeC5qcy5tYXAiXSwibmFtZXMiOlsiZ2V0RG9tYWluV2l0aG91dFN1ZmZpeCIsImRvbWFpbiIsInN1ZmZpeCIsInNsaWNlIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js":
/*!********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/domain.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDomain)\n/* harmony export */ });\n/**\n * Check if `vhost` is a valid suffix of `hostname` (top-domain)\n *\n * It means that `vhost` needs to be a suffix of `hostname` and we then need to\n * make sure that: either they are equal, or the character preceding `vhost` in\n * `hostname` is a '.' (it should not be a partial label).\n *\n * * hostname = 'not.evil.com' and vhost = 'vil.com'      => not ok\n * * hostname = 'not.evil.com' and vhost = 'evil.com'     => ok\n * * hostname = 'not.evil.com' and vhost = 'not.evil.com' => ok\n */ function shareSameDomainSuffix(hostname, vhost) {\n    if (hostname.endsWith(vhost)) {\n        return hostname.length === vhost.length || hostname[hostname.length - vhost.length - 1] === \".\";\n    }\n    return false;\n}\n/**\n * Given a hostname and its public suffix, extract the general domain.\n */ function extractDomainWithSuffix(hostname, publicSuffix) {\n    // Locate the index of the last '.' in the part of the `hostname` preceding\n    // the public suffix.\n    //\n    // examples:\n    //   1. not.evil.co.uk  => evil.co.uk\n    //         ^    ^\n    //         |    | start of public suffix\n    //         | index of the last dot\n    //\n    //   2. example.co.uk   => example.co.uk\n    //     ^       ^\n    //     |       | start of public suffix\n    //     |\n    //     | (-1) no dot found before the public suffix\n    const publicSuffixIndex = hostname.length - publicSuffix.length - 2;\n    const lastDotBeforeSuffixIndex = hostname.lastIndexOf(\".\", publicSuffixIndex);\n    // No '.' found, then `hostname` is the general domain (no sub-domain)\n    if (lastDotBeforeSuffixIndex === -1) {\n        return hostname;\n    }\n    // Extract the part between the last '.'\n    return hostname.slice(lastDotBeforeSuffixIndex + 1);\n}\n/**\n * Detects the domain based on rules and upon and a host string\n */ function getDomain(suffix, hostname, options) {\n    // Check if `hostname` ends with a member of `validHosts`.\n    if (options.validHosts !== null) {\n        const validHosts = options.validHosts;\n        for (const vhost of validHosts){\n            if (/*@__INLINE__*/ shareSameDomainSuffix(hostname, vhost)) {\n                return vhost;\n            }\n        }\n    }\n    let numberOfLeadingDots = 0;\n    if (hostname.startsWith(\".\")) {\n        while(numberOfLeadingDots < hostname.length && hostname[numberOfLeadingDots] === \".\"){\n            numberOfLeadingDots += 1;\n        }\n    }\n    // If `hostname` is a valid public suffix, then there is no domain to return.\n    // Since we already know that `getPublicSuffix` returns a suffix of `hostname`\n    // there is no need to perform a string comparison and we only compare the\n    // size.\n    if (suffix.length === hostname.length - numberOfLeadingDots) {\n        return null;\n    }\n    // To extract the general domain, we start by identifying the public suffix\n    // (if any), then consider the domain to be the public suffix with one added\n    // level of depth. (e.g.: if hostname is `not.evil.co.uk` and public suffix:\n    // `co.uk`, then we take one more level: `evil`, giving the final result:\n    // `evil.co.uk`).\n    return /*@__INLINE__*/ extractDomainWithSuffix(hostname, suffix);\n} //# sourceMappingURL=domain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvZG9tYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Ozs7OztDQVVDLEdBQ0QsU0FBU0Esc0JBQXNCQyxRQUFRLEVBQUVDLEtBQUs7SUFDMUMsSUFBSUQsU0FBU0UsUUFBUSxDQUFDRCxRQUFRO1FBQzFCLE9BQVFELFNBQVNHLE1BQU0sS0FBS0YsTUFBTUUsTUFBTSxJQUNwQ0gsUUFBUSxDQUFDQSxTQUFTRyxNQUFNLEdBQUdGLE1BQU1FLE1BQU0sR0FBRyxFQUFFLEtBQUs7SUFDekQ7SUFDQSxPQUFPO0FBQ1g7QUFDQTs7Q0FFQyxHQUNELFNBQVNDLHdCQUF3QkosUUFBUSxFQUFFSyxZQUFZO0lBQ25ELDJFQUEyRTtJQUMzRSxxQkFBcUI7SUFDckIsRUFBRTtJQUNGLFlBQVk7SUFDWixxQ0FBcUM7SUFDckMsaUJBQWlCO0lBQ2pCLHdDQUF3QztJQUN4QyxrQ0FBa0M7SUFDbEMsRUFBRTtJQUNGLHdDQUF3QztJQUN4QyxnQkFBZ0I7SUFDaEIsdUNBQXVDO0lBQ3ZDLFFBQVE7SUFDUixtREFBbUQ7SUFDbkQsTUFBTUMsb0JBQW9CTixTQUFTRyxNQUFNLEdBQUdFLGFBQWFGLE1BQU0sR0FBRztJQUNsRSxNQUFNSSwyQkFBMkJQLFNBQVNRLFdBQVcsQ0FBQyxLQUFLRjtJQUMzRCxzRUFBc0U7SUFDdEUsSUFBSUMsNkJBQTZCLENBQUMsR0FBRztRQUNqQyxPQUFPUDtJQUNYO0lBQ0Esd0NBQXdDO0lBQ3hDLE9BQU9BLFNBQVNTLEtBQUssQ0FBQ0YsMkJBQTJCO0FBQ3JEO0FBQ0E7O0NBRUMsR0FDYyxTQUFTRyxVQUFVQyxNQUFNLEVBQUVYLFFBQVEsRUFBRVksT0FBTztJQUN2RCwwREFBMEQ7SUFDMUQsSUFBSUEsUUFBUUMsVUFBVSxLQUFLLE1BQU07UUFDN0IsTUFBTUEsYUFBYUQsUUFBUUMsVUFBVTtRQUNyQyxLQUFLLE1BQU1aLFNBQVNZLFdBQVk7WUFDNUIsSUFBSyxhQUFhLEdBQUVkLHNCQUFzQkMsVUFBVUMsUUFBUTtnQkFDeEQsT0FBT0E7WUFDWDtRQUNKO0lBQ0o7SUFDQSxJQUFJYSxzQkFBc0I7SUFDMUIsSUFBSWQsU0FBU2UsVUFBVSxDQUFDLE1BQU07UUFDMUIsTUFBT0Qsc0JBQXNCZCxTQUFTRyxNQUFNLElBQ3hDSCxRQUFRLENBQUNjLG9CQUFvQixLQUFLLElBQUs7WUFDdkNBLHVCQUF1QjtRQUMzQjtJQUNKO0lBQ0EsNkVBQTZFO0lBQzdFLDhFQUE4RTtJQUM5RSwwRUFBMEU7SUFDMUUsUUFBUTtJQUNSLElBQUlILE9BQU9SLE1BQU0sS0FBS0gsU0FBU0csTUFBTSxHQUFHVyxxQkFBcUI7UUFDekQsT0FBTztJQUNYO0lBQ0EsMkVBQTJFO0lBQzNFLDRFQUE0RTtJQUM1RSw0RUFBNEU7SUFDNUUseUVBQXlFO0lBQ3pFLGlCQUFpQjtJQUNqQixPQUFPLGFBQWEsR0FBR1Ysd0JBQXdCSixVQUFVVztBQUM3RCxFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BpY3Rpb25hcnktZ2FtZS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9kb21haW4uanM/NGZmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIGB2aG9zdGAgaXMgYSB2YWxpZCBzdWZmaXggb2YgYGhvc3RuYW1lYCAodG9wLWRvbWFpbilcbiAqXG4gKiBJdCBtZWFucyB0aGF0IGB2aG9zdGAgbmVlZHMgdG8gYmUgYSBzdWZmaXggb2YgYGhvc3RuYW1lYCBhbmQgd2UgdGhlbiBuZWVkIHRvXG4gKiBtYWtlIHN1cmUgdGhhdDogZWl0aGVyIHRoZXkgYXJlIGVxdWFsLCBvciB0aGUgY2hhcmFjdGVyIHByZWNlZGluZyBgdmhvc3RgIGluXG4gKiBgaG9zdG5hbWVgIGlzIGEgJy4nIChpdCBzaG91bGQgbm90IGJlIGEgcGFydGlhbCBsYWJlbCkuXG4gKlxuICogKiBob3N0bmFtZSA9ICdub3QuZXZpbC5jb20nIGFuZCB2aG9zdCA9ICd2aWwuY29tJyAgICAgID0+IG5vdCBva1xuICogKiBob3N0bmFtZSA9ICdub3QuZXZpbC5jb20nIGFuZCB2aG9zdCA9ICdldmlsLmNvbScgICAgID0+IG9rXG4gKiAqIGhvc3RuYW1lID0gJ25vdC5ldmlsLmNvbScgYW5kIHZob3N0ID0gJ25vdC5ldmlsLmNvbScgPT4gb2tcbiAqL1xuZnVuY3Rpb24gc2hhcmVTYW1lRG9tYWluU3VmZml4KGhvc3RuYW1lLCB2aG9zdCkge1xuICAgIGlmIChob3N0bmFtZS5lbmRzV2l0aCh2aG9zdCkpIHtcbiAgICAgICAgcmV0dXJuIChob3N0bmFtZS5sZW5ndGggPT09IHZob3N0Lmxlbmd0aCB8fFxuICAgICAgICAgICAgaG9zdG5hbWVbaG9zdG5hbWUubGVuZ3RoIC0gdmhvc3QubGVuZ3RoIC0gMV0gPT09ICcuJyk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8qKlxuICogR2l2ZW4gYSBob3N0bmFtZSBhbmQgaXRzIHB1YmxpYyBzdWZmaXgsIGV4dHJhY3QgdGhlIGdlbmVyYWwgZG9tYWluLlxuICovXG5mdW5jdGlvbiBleHRyYWN0RG9tYWluV2l0aFN1ZmZpeChob3N0bmFtZSwgcHVibGljU3VmZml4KSB7XG4gICAgLy8gTG9jYXRlIHRoZSBpbmRleCBvZiB0aGUgbGFzdCAnLicgaW4gdGhlIHBhcnQgb2YgdGhlIGBob3N0bmFtZWAgcHJlY2VkaW5nXG4gICAgLy8gdGhlIHB1YmxpYyBzdWZmaXguXG4gICAgLy9cbiAgICAvLyBleGFtcGxlczpcbiAgICAvLyAgIDEuIG5vdC5ldmlsLmNvLnVrICA9PiBldmlsLmNvLnVrXG4gICAgLy8gICAgICAgICBeICAgIF5cbiAgICAvLyAgICAgICAgIHwgICAgfCBzdGFydCBvZiBwdWJsaWMgc3VmZml4XG4gICAgLy8gICAgICAgICB8IGluZGV4IG9mIHRoZSBsYXN0IGRvdFxuICAgIC8vXG4gICAgLy8gICAyLiBleGFtcGxlLmNvLnVrICAgPT4gZXhhbXBsZS5jby51a1xuICAgIC8vICAgICBeICAgICAgIF5cbiAgICAvLyAgICAgfCAgICAgICB8IHN0YXJ0IG9mIHB1YmxpYyBzdWZmaXhcbiAgICAvLyAgICAgfFxuICAgIC8vICAgICB8ICgtMSkgbm8gZG90IGZvdW5kIGJlZm9yZSB0aGUgcHVibGljIHN1ZmZpeFxuICAgIGNvbnN0IHB1YmxpY1N1ZmZpeEluZGV4ID0gaG9zdG5hbWUubGVuZ3RoIC0gcHVibGljU3VmZml4Lmxlbmd0aCAtIDI7XG4gICAgY29uc3QgbGFzdERvdEJlZm9yZVN1ZmZpeEluZGV4ID0gaG9zdG5hbWUubGFzdEluZGV4T2YoJy4nLCBwdWJsaWNTdWZmaXhJbmRleCk7XG4gICAgLy8gTm8gJy4nIGZvdW5kLCB0aGVuIGBob3N0bmFtZWAgaXMgdGhlIGdlbmVyYWwgZG9tYWluIChubyBzdWItZG9tYWluKVxuICAgIGlmIChsYXN0RG90QmVmb3JlU3VmZml4SW5kZXggPT09IC0xKSB7XG4gICAgICAgIHJldHVybiBob3N0bmFtZTtcbiAgICB9XG4gICAgLy8gRXh0cmFjdCB0aGUgcGFydCBiZXR3ZWVuIHRoZSBsYXN0ICcuJ1xuICAgIHJldHVybiBob3N0bmFtZS5zbGljZShsYXN0RG90QmVmb3JlU3VmZml4SW5kZXggKyAxKTtcbn1cbi8qKlxuICogRGV0ZWN0cyB0aGUgZG9tYWluIGJhc2VkIG9uIHJ1bGVzIGFuZCB1cG9uIGFuZCBhIGhvc3Qgc3RyaW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldERvbWFpbihzdWZmaXgsIGhvc3RuYW1lLCBvcHRpb25zKSB7XG4gICAgLy8gQ2hlY2sgaWYgYGhvc3RuYW1lYCBlbmRzIHdpdGggYSBtZW1iZXIgb2YgYHZhbGlkSG9zdHNgLlxuICAgIGlmIChvcHRpb25zLnZhbGlkSG9zdHMgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3QgdmFsaWRIb3N0cyA9IG9wdGlvbnMudmFsaWRIb3N0cztcbiAgICAgICAgZm9yIChjb25zdCB2aG9zdCBvZiB2YWxpZEhvc3RzKSB7XG4gICAgICAgICAgICBpZiAoIC8qQF9fSU5MSU5FX18qL3NoYXJlU2FtZURvbWFpblN1ZmZpeChob3N0bmFtZSwgdmhvc3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZob3N0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGxldCBudW1iZXJPZkxlYWRpbmdEb3RzID0gMDtcbiAgICBpZiAoaG9zdG5hbWUuc3RhcnRzV2l0aCgnLicpKSB7XG4gICAgICAgIHdoaWxlIChudW1iZXJPZkxlYWRpbmdEb3RzIDwgaG9zdG5hbWUubGVuZ3RoICYmXG4gICAgICAgICAgICBob3N0bmFtZVtudW1iZXJPZkxlYWRpbmdEb3RzXSA9PT0gJy4nKSB7XG4gICAgICAgICAgICBudW1iZXJPZkxlYWRpbmdEb3RzICs9IDE7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgYGhvc3RuYW1lYCBpcyBhIHZhbGlkIHB1YmxpYyBzdWZmaXgsIHRoZW4gdGhlcmUgaXMgbm8gZG9tYWluIHRvIHJldHVybi5cbiAgICAvLyBTaW5jZSB3ZSBhbHJlYWR5IGtub3cgdGhhdCBgZ2V0UHVibGljU3VmZml4YCByZXR1cm5zIGEgc3VmZml4IG9mIGBob3N0bmFtZWBcbiAgICAvLyB0aGVyZSBpcyBubyBuZWVkIHRvIHBlcmZvcm0gYSBzdHJpbmcgY29tcGFyaXNvbiBhbmQgd2Ugb25seSBjb21wYXJlIHRoZVxuICAgIC8vIHNpemUuXG4gICAgaWYgKHN1ZmZpeC5sZW5ndGggPT09IGhvc3RuYW1lLmxlbmd0aCAtIG51bWJlck9mTGVhZGluZ0RvdHMpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIFRvIGV4dHJhY3QgdGhlIGdlbmVyYWwgZG9tYWluLCB3ZSBzdGFydCBieSBpZGVudGlmeWluZyB0aGUgcHVibGljIHN1ZmZpeFxuICAgIC8vIChpZiBhbnkpLCB0aGVuIGNvbnNpZGVyIHRoZSBkb21haW4gdG8gYmUgdGhlIHB1YmxpYyBzdWZmaXggd2l0aCBvbmUgYWRkZWRcbiAgICAvLyBsZXZlbCBvZiBkZXB0aC4gKGUuZy46IGlmIGhvc3RuYW1lIGlzIGBub3QuZXZpbC5jby51a2AgYW5kIHB1YmxpYyBzdWZmaXg6XG4gICAgLy8gYGNvLnVrYCwgdGhlbiB3ZSB0YWtlIG9uZSBtb3JlIGxldmVsOiBgZXZpbGAsIGdpdmluZyB0aGUgZmluYWwgcmVzdWx0OlxuICAgIC8vIGBldmlsLmNvLnVrYCkuXG4gICAgcmV0dXJuIC8qQF9fSU5MSU5FX18qLyBleHRyYWN0RG9tYWluV2l0aFN1ZmZpeChob3N0bmFtZSwgc3VmZml4KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvbWFpbi5qcy5tYXAiXSwibmFtZXMiOlsic2hhcmVTYW1lRG9tYWluU3VmZml4IiwiaG9zdG5hbWUiLCJ2aG9zdCIsImVuZHNXaXRoIiwibGVuZ3RoIiwiZXh0cmFjdERvbWFpbldpdGhTdWZmaXgiLCJwdWJsaWNTdWZmaXgiLCJwdWJsaWNTdWZmaXhJbmRleCIsImxhc3REb3RCZWZvcmVTdWZmaXhJbmRleCIsImxhc3RJbmRleE9mIiwic2xpY2UiLCJnZXREb21haW4iLCJzdWZmaXgiLCJvcHRpb25zIiwidmFsaWRIb3N0cyIsIm51bWJlck9mTGVhZGluZ0RvdHMiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/extract-hostname.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ extractHostname)\n/* harmony export */ });\n/**\n * @param url - URL we want to extract a hostname from.\n * @param urlIsValidHostname - hint from caller; true if `url` is already a valid hostname.\n */ function extractHostname(url, urlIsValidHostname) {\n    let start = 0;\n    let end = url.length;\n    let hasUpper = false;\n    // If url is not already a valid hostname, then try to extract hostname.\n    if (!urlIsValidHostname) {\n        // Special handling of data URLs\n        if (url.startsWith(\"data:\")) {\n            return null;\n        }\n        // Trim leading spaces\n        while(start < url.length && url.charCodeAt(start) <= 32){\n            start += 1;\n        }\n        // Trim trailing spaces\n        while(end > start + 1 && url.charCodeAt(end - 1) <= 32){\n            end -= 1;\n        }\n        // Skip scheme.\n        if (url.charCodeAt(start) === 47 /* '/' */  && url.charCodeAt(start + 1) === 47 /* '/' */ ) {\n            start += 2;\n        } else {\n            const indexOfProtocol = url.indexOf(\":/\", start);\n            if (indexOfProtocol !== -1) {\n                // Implement fast-path for common protocols. We expect most protocols\n                // should be one of these 4 and thus we will not need to perform the\n                // more expansive validity check most of the time.\n                const protocolSize = indexOfProtocol - start;\n                const c0 = url.charCodeAt(start);\n                const c1 = url.charCodeAt(start + 1);\n                const c2 = url.charCodeAt(start + 2);\n                const c3 = url.charCodeAt(start + 3);\n                const c4 = url.charCodeAt(start + 4);\n                if (protocolSize === 5 && c0 === 104 /* 'h' */  && c1 === 116 /* 't' */  && c2 === 116 /* 't' */  && c3 === 112 /* 'p' */  && c4 === 115 /* 's' */ ) {\n                // https\n                } else if (protocolSize === 4 && c0 === 104 /* 'h' */  && c1 === 116 /* 't' */  && c2 === 116 /* 't' */  && c3 === 112 /* 'p' */ ) {\n                // http\n                } else if (protocolSize === 3 && c0 === 119 /* 'w' */  && c1 === 115 /* 's' */  && c2 === 115 /* 's' */ ) {\n                // wss\n                } else if (protocolSize === 2 && c0 === 119 /* 'w' */  && c1 === 115 /* 's' */ ) {\n                // ws\n                } else {\n                    // Check that scheme is valid\n                    for(let i = start; i < indexOfProtocol; i += 1){\n                        const lowerCaseCode = url.charCodeAt(i) | 32;\n                        if (!(lowerCaseCode >= 97 && lowerCaseCode <= 122 || // [a, z]\n                        lowerCaseCode >= 48 && lowerCaseCode <= 57 || // [0, 9]\n                        lowerCaseCode === 46 || // '.'\n                        lowerCaseCode === 45 || // '-'\n                        lowerCaseCode === 43 // '+'\n                        )) {\n                            return null;\n                        }\n                    }\n                }\n                // Skip 0, 1 or more '/' after ':/'\n                start = indexOfProtocol + 2;\n                while(url.charCodeAt(start) === 47 /* '/' */ ){\n                    start += 1;\n                }\n            }\n        }\n        // Detect first occurrence of '/', '?' or '#'. We also keep track of the\n        // last occurrence of '@', ']' or ':' to speed-up subsequent parsing of\n        // (respectively), identifier, ipv6 or port.\n        let indexOfIdentifier = -1;\n        let indexOfClosingBracket = -1;\n        let indexOfPort = -1;\n        for(let i = start; i < end; i += 1){\n            const code = url.charCodeAt(i);\n            if (code === 35 || // '#'\n            code === 47 || // '/'\n            code === 63 // '?'\n            ) {\n                end = i;\n                break;\n            } else if (code === 64) {\n                // '@'\n                indexOfIdentifier = i;\n            } else if (code === 93) {\n                // ']'\n                indexOfClosingBracket = i;\n            } else if (code === 58) {\n                // ':'\n                indexOfPort = i;\n            } else if (code >= 65 && code <= 90) {\n                hasUpper = true;\n            }\n        }\n        // Detect identifier: '@'\n        if (indexOfIdentifier !== -1 && indexOfIdentifier > start && indexOfIdentifier < end) {\n            start = indexOfIdentifier + 1;\n        }\n        // Handle ipv6 addresses\n        if (url.charCodeAt(start) === 91 /* '[' */ ) {\n            if (indexOfClosingBracket !== -1) {\n                return url.slice(start + 1, indexOfClosingBracket).toLowerCase();\n            }\n            return null;\n        } else if (indexOfPort !== -1 && indexOfPort > start && indexOfPort < end) {\n            // Detect port: ':'\n            end = indexOfPort;\n        }\n    }\n    // Trim trailing dots\n    while(end > start + 1 && url.charCodeAt(end - 1) === 46 /* '.' */ ){\n        end -= 1;\n    }\n    const hostname = start !== 0 || end !== url.length ? url.slice(start, end) : url;\n    if (hasUpper) {\n        return hostname.toLowerCase();\n    }\n    return hostname;\n} //# sourceMappingURL=extract-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/factory.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getEmptyResult: () => (/* binding */ getEmptyResult),\n/* harmony export */   parseImpl: () => (/* binding */ parseImpl),\n/* harmony export */   resetResult: () => (/* binding */ resetResult)\n/* harmony export */ });\n/* harmony import */ var _domain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./domain */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/domain.js\");\n/* harmony import */ var _domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./domain-without-suffix */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/domain-without-suffix.js\");\n/* harmony import */ var _extract_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extract-hostname */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/extract-hostname.js\");\n/* harmony import */ var _is_ip__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is-ip */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js\");\n/* harmony import */ var _is_valid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is-valid */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js\");\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./options */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\");\n/* harmony import */ var _subdomain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./subdomain */ \"(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js\");\n/**\n * Implement a factory allowing to plug different implementations of suffix\n * lookup (e.g.: using a trie or the packed hashes datastructures). This is used\n * and exposed in `tldts.ts` and `tldts-experimental.ts` bundle entrypoints.\n */ \n\n\n\n\n\n\nfunction getEmptyResult() {\n    return {\n        domain: null,\n        domainWithoutSuffix: null,\n        hostname: null,\n        isIcann: null,\n        isIp: null,\n        isPrivate: null,\n        publicSuffix: null,\n        subdomain: null\n    };\n}\nfunction resetResult(result) {\n    result.domain = null;\n    result.domainWithoutSuffix = null;\n    result.hostname = null;\n    result.isIcann = null;\n    result.isIp = null;\n    result.isPrivate = null;\n    result.publicSuffix = null;\n    result.subdomain = null;\n}\nfunction parseImpl(url, step, suffixLookup, partialOptions, result) {\n    const options = /*@__INLINE__*/ (0,_options__WEBPACK_IMPORTED_MODULE_5__.setDefaults)(partialOptions);\n    // Very fast approximate check to make sure `url` is a string. This is needed\n    // because the library will not necessarily be used in a typed setup and\n    // values of arbitrary types might be given as argument.\n    if (typeof url !== \"string\") {\n        return result;\n    }\n    // Extract hostname from `url` only if needed. This can be made optional\n    // using `options.extractHostname`. This option will typically be used\n    // whenever we are sure the inputs to `parse` are already hostnames and not\n    // arbitrary URLs.\n    //\n    // `mixedInput` allows to specify if we expect a mix of URLs and hostnames\n    // as input. If only hostnames are expected then `extractHostname` can be\n    // set to `false` to speed-up parsing. If only URLs are expected then\n    // `mixedInputs` can be set to `false`. The `mixedInputs` is only a hint\n    // and will not change the behavior of the library.\n    if (!options.extractHostname) {\n        result.hostname = url;\n    } else if (options.mixedInputs) {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, (0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(url));\n    } else {\n        result.hostname = (0,_extract_hostname__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(url, false);\n    }\n    if (step === 0 /* FLAG.HOSTNAME */  || result.hostname === null) {\n        return result;\n    }\n    // Check if `hostname` is a valid ip address\n    if (options.detectIp) {\n        result.isIp = (0,_is_ip__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(result.hostname);\n        if (result.isIp) {\n            return result;\n        }\n    }\n    // Perform optional hostname validation. If hostname is not valid, no need to\n    // go further as there will be no valid domain or sub-domain.\n    if (options.validateHostname && options.extractHostname && !(0,_is_valid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(result.hostname)) {\n        result.hostname = null;\n        return result;\n    }\n    // Extract public suffix\n    suffixLookup(result.hostname, options, result);\n    if (step === 2 /* FLAG.PUBLIC_SUFFIX */  || result.publicSuffix === null) {\n        return result;\n    }\n    // Extract domain\n    result.domain = (0,_domain__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(result.publicSuffix, result.hostname, options);\n    if (step === 3 /* FLAG.DOMAIN */  || result.domain === null) {\n        return result;\n    }\n    // Extract subdomain\n    result.subdomain = (0,_subdomain__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(result.hostname, result.domain);\n    if (step === 4 /* FLAG.SUB_DOMAIN */ ) {\n        return result;\n    }\n    // Extract domain without suffix\n    result.domainWithoutSuffix = (0,_domain_without_suffix__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(result.domain, result.publicSuffix);\n    return result;\n} //# sourceMappingURL=factory.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/factory.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js":
/*!*******************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-ip.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isIp)\n/* harmony export */ });\n/**\n * Check if a hostname is an IP. You should be aware that this only works\n * because `hostname` is already garanteed to be a valid hostname!\n */ function isProbablyIpv4(hostname) {\n    // Cannot be shorted than 1.1.1.1\n    if (hostname.length < 7) {\n        return false;\n    }\n    // Cannot be longer than: 255.255.255.255\n    if (hostname.length > 15) {\n        return false;\n    }\n    let numberOfDots = 0;\n    for(let i = 0; i < hostname.length; i += 1){\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */ ) {\n            numberOfDots += 1;\n        } else if (code < 48 /* '0' */  || code > 57 /* '9' */ ) {\n            return false;\n        }\n    }\n    return numberOfDots === 3 && hostname.charCodeAt(0) !== 46 /* '.' */  && hostname.charCodeAt(hostname.length - 1) !== 46 /* '.' */ ;\n}\n/**\n * Similar to isProbablyIpv4.\n */ function isProbablyIpv6(hostname) {\n    if (hostname.length < 3) {\n        return false;\n    }\n    let start = hostname.startsWith(\"[\") ? 1 : 0;\n    let end = hostname.length;\n    if (hostname[end - 1] === \"]\") {\n        end -= 1;\n    }\n    // We only consider the maximum size of a normal IPV6. Note that this will\n    // fail on so-called \"IPv4 mapped IPv6 addresses\" but this is a corner-case\n    // and a proper validation library should be used for these.\n    if (end - start > 39) {\n        return false;\n    }\n    let hasColon = false;\n    for(; start < end; start += 1){\n        const code = hostname.charCodeAt(start);\n        if (code === 58 /* ':' */ ) {\n            hasColon = true;\n        } else if (!(code >= 48 && code <= 57 || // 0-9\n        code >= 97 && code <= 102 || // a-f\n        code >= 65 && code <= 90 // A-F\n        )) {\n            return false;\n        }\n    }\n    return hasColon;\n}\n/**\n * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).\n * This *will not* work on any string. We need `hostname` to be a valid\n * hostname.\n */ function isIp(hostname) {\n    return isProbablyIpv6(hostname) || isProbablyIpv4(hostname);\n} //# sourceMappingURL=is-ip.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvaXMtaXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUNELFNBQVNBLGVBQWVDLFFBQVE7SUFDNUIsaUNBQWlDO0lBQ2pDLElBQUlBLFNBQVNDLE1BQU0sR0FBRyxHQUFHO1FBQ3JCLE9BQU87SUFDWDtJQUNBLHlDQUF5QztJQUN6QyxJQUFJRCxTQUFTQyxNQUFNLEdBQUcsSUFBSTtRQUN0QixPQUFPO0lBQ1g7SUFDQSxJQUFJQyxlQUFlO0lBQ25CLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJSCxTQUFTQyxNQUFNLEVBQUVFLEtBQUssRUFBRztRQUN6QyxNQUFNQyxPQUFPSixTQUFTSyxVQUFVLENBQUNGO1FBQ2pDLElBQUlDLFNBQVMsR0FBRyxPQUFPLEtBQUk7WUFDdkJGLGdCQUFnQjtRQUNwQixPQUNLLElBQUlFLE9BQU8sR0FBRyxPQUFPLE9BQU1BLE9BQU8sR0FBRyxPQUFPLEtBQUk7WUFDakQsT0FBTztRQUNYO0lBQ0o7SUFDQSxPQUFRRixpQkFBaUIsS0FDckJGLFNBQVNLLFVBQVUsQ0FBQyxPQUFPLEdBQUcsT0FBTyxPQUNyQ0wsU0FBU0ssVUFBVSxDQUFDTCxTQUFTQyxNQUFNLEdBQUcsT0FBTyxHQUFHLE9BQU87QUFDL0Q7QUFDQTs7Q0FFQyxHQUNELFNBQVNLLGVBQWVOLFFBQVE7SUFDNUIsSUFBSUEsU0FBU0MsTUFBTSxHQUFHLEdBQUc7UUFDckIsT0FBTztJQUNYO0lBQ0EsSUFBSU0sUUFBUVAsU0FBU1EsVUFBVSxDQUFDLE9BQU8sSUFBSTtJQUMzQyxJQUFJQyxNQUFNVCxTQUFTQyxNQUFNO0lBQ3pCLElBQUlELFFBQVEsQ0FBQ1MsTUFBTSxFQUFFLEtBQUssS0FBSztRQUMzQkEsT0FBTztJQUNYO0lBQ0EsMEVBQTBFO0lBQzFFLDJFQUEyRTtJQUMzRSw0REFBNEQ7SUFDNUQsSUFBSUEsTUFBTUYsUUFBUSxJQUFJO1FBQ2xCLE9BQU87SUFDWDtJQUNBLElBQUlHLFdBQVc7SUFDZixNQUFPSCxRQUFRRSxLQUFLRixTQUFTLEVBQUc7UUFDNUIsTUFBTUgsT0FBT0osU0FBU0ssVUFBVSxDQUFDRTtRQUNqQyxJQUFJSCxTQUFTLEdBQUcsT0FBTyxLQUFJO1lBQ3ZCTSxXQUFXO1FBQ2YsT0FDSyxJQUFJLENBQUcsU0FBUyxNQUFNTixRQUFRLE1BQU8sTUFBTTtRQUMzQ0EsUUFBUSxNQUFNQSxRQUFRLE9BQVEsTUFBTTtRQUNwQ0EsUUFBUSxNQUFNQSxRQUFRLEdBQUssTUFBTTtRQUFULEdBQzFCO1lBQ0MsT0FBTztRQUNYO0lBQ0o7SUFDQSxPQUFPTTtBQUNYO0FBQ0E7Ozs7Q0FJQyxHQUNjLFNBQVNDLEtBQUtYLFFBQVE7SUFDakMsT0FBT00sZUFBZU4sYUFBYUQsZUFBZUM7QUFDdEQsRUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9waWN0aW9uYXJ5LWdhbWUvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvaXMtaXAuanM/OGEwYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrIGlmIGEgaG9zdG5hbWUgaXMgYW4gSVAuIFlvdSBzaG91bGQgYmUgYXdhcmUgdGhhdCB0aGlzIG9ubHkgd29ya3NcbiAqIGJlY2F1c2UgYGhvc3RuYW1lYCBpcyBhbHJlYWR5IGdhcmFudGVlZCB0byBiZSBhIHZhbGlkIGhvc3RuYW1lIVxuICovXG5mdW5jdGlvbiBpc1Byb2JhYmx5SXB2NChob3N0bmFtZSkge1xuICAgIC8vIENhbm5vdCBiZSBzaG9ydGVkIHRoYW4gMS4xLjEuMVxuICAgIGlmIChob3N0bmFtZS5sZW5ndGggPCA3KSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gQ2Fubm90IGJlIGxvbmdlciB0aGFuOiAyNTUuMjU1LjI1NS4yNTVcbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoID4gMTUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgbnVtYmVyT2ZEb3RzID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGhvc3RuYW1lLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGNvZGUgPSBob3N0bmFtZS5jaGFyQ29kZUF0KGkpO1xuICAgICAgICBpZiAoY29kZSA9PT0gNDYgLyogJy4nICovKSB7XG4gICAgICAgICAgICBudW1iZXJPZkRvdHMgKz0gMTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb2RlIDwgNDggLyogJzAnICovIHx8IGNvZGUgPiA1NyAvKiAnOScgKi8pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKG51bWJlck9mRG90cyA9PT0gMyAmJlxuICAgICAgICBob3N0bmFtZS5jaGFyQ29kZUF0KDApICE9PSA0NiAvKiAnLicgKi8gJiZcbiAgICAgICAgaG9zdG5hbWUuY2hhckNvZGVBdChob3N0bmFtZS5sZW5ndGggLSAxKSAhPT0gNDYgLyogJy4nICovKTtcbn1cbi8qKlxuICogU2ltaWxhciB0byBpc1Byb2JhYmx5SXB2NC5cbiAqL1xuZnVuY3Rpb24gaXNQcm9iYWJseUlwdjYoaG9zdG5hbWUpIHtcbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoIDwgMykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBzdGFydCA9IGhvc3RuYW1lLnN0YXJ0c1dpdGgoJ1snKSA/IDEgOiAwO1xuICAgIGxldCBlbmQgPSBob3N0bmFtZS5sZW5ndGg7XG4gICAgaWYgKGhvc3RuYW1lW2VuZCAtIDFdID09PSAnXScpIHtcbiAgICAgICAgZW5kIC09IDE7XG4gICAgfVxuICAgIC8vIFdlIG9ubHkgY29uc2lkZXIgdGhlIG1heGltdW0gc2l6ZSBvZiBhIG5vcm1hbCBJUFY2LiBOb3RlIHRoYXQgdGhpcyB3aWxsXG4gICAgLy8gZmFpbCBvbiBzby1jYWxsZWQgXCJJUHY0IG1hcHBlZCBJUHY2IGFkZHJlc3Nlc1wiIGJ1dCB0aGlzIGlzIGEgY29ybmVyLWNhc2VcbiAgICAvLyBhbmQgYSBwcm9wZXIgdmFsaWRhdGlvbiBsaWJyYXJ5IHNob3VsZCBiZSB1c2VkIGZvciB0aGVzZS5cbiAgICBpZiAoZW5kIC0gc3RhcnQgPiAzOSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBoYXNDb2xvbiA9IGZhbHNlO1xuICAgIGZvciAoOyBzdGFydCA8IGVuZDsgc3RhcnQgKz0gMSkge1xuICAgICAgICBjb25zdCBjb2RlID0gaG9zdG5hbWUuY2hhckNvZGVBdChzdGFydCk7XG4gICAgICAgIGlmIChjb2RlID09PSA1OCAvKiAnOicgKi8pIHtcbiAgICAgICAgICAgIGhhc0NvbG9uID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghKCgoY29kZSA+PSA0OCAmJiBjb2RlIDw9IDU3KSB8fCAvLyAwLTlcbiAgICAgICAgICAgIChjb2RlID49IDk3ICYmIGNvZGUgPD0gMTAyKSB8fCAvLyBhLWZcbiAgICAgICAgICAgIChjb2RlID49IDY1ICYmIGNvZGUgPD0gOTApKSAvLyBBLUZcbiAgICAgICAgKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBoYXNDb2xvbjtcbn1cbi8qKlxuICogQ2hlY2sgaWYgYGhvc3RuYW1lYCBpcyAqcHJvYmFibHkqIGEgdmFsaWQgaXAgYWRkciAoZWl0aGVyIGlwdjYgb3IgaXB2NCkuXG4gKiBUaGlzICp3aWxsIG5vdCogd29yayBvbiBhbnkgc3RyaW5nLiBXZSBuZWVkIGBob3N0bmFtZWAgdG8gYmUgYSB2YWxpZFxuICogaG9zdG5hbWUuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzSXAoaG9zdG5hbWUpIHtcbiAgICByZXR1cm4gaXNQcm9iYWJseUlwdjYoaG9zdG5hbWUpIHx8IGlzUHJvYmFibHlJcHY0KGhvc3RuYW1lKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlzLWlwLmpzLm1hcCJdLCJuYW1lcyI6WyJpc1Byb2JhYmx5SXB2NCIsImhvc3RuYW1lIiwibGVuZ3RoIiwibnVtYmVyT2ZEb3RzIiwiaSIsImNvZGUiLCJjaGFyQ29kZUF0IiwiaXNQcm9iYWJseUlwdjYiLCJzdGFydCIsInN0YXJ0c1dpdGgiLCJlbmQiLCJoYXNDb2xvbiIsImlzSXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/is-ip.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js":
/*!**********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/is-valid.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/**\n * Implements fast shallow verification of hostnames. This does not perform a\n * struct check on the content of labels (classes of Unicode characters, etc.)\n * but instead check that the structure is valid (number of labels, length of\n * labels, etc.).\n *\n * If you need stricter validation, consider using an external library.\n */ function isValidAscii(code) {\n    return code >= 97 && code <= 122 || code >= 48 && code <= 57 || code > 127;\n}\n/**\n * Check if a hostname string is valid. It's usually a preliminary check before\n * trying to use getDomain or anything else.\n *\n * Beware: it does not check if the TLD exists.\n */ /* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname) {\n    if (hostname.length > 255) {\n        return false;\n    }\n    if (hostname.length === 0) {\n        return false;\n    }\n    if (/*@__INLINE__*/ !isValidAscii(hostname.charCodeAt(0)) && hostname.charCodeAt(0) !== 46 && // '.' (dot)\n    hostname.charCodeAt(0) !== 95 // '_' (underscore)\n    ) {\n        return false;\n    }\n    // Validate hostname according to RFC\n    let lastDotIndex = -1;\n    let lastCharCode = -1;\n    const len = hostname.length;\n    for(let i = 0; i < len; i += 1){\n        const code = hostname.charCodeAt(i);\n        if (code === 46 /* '.' */ ) {\n            if (// Check that previous label is < 63 bytes long (64 = 63 + '.')\n            i - lastDotIndex > 64 || // Check that previous character was not already a '.'\n            lastCharCode === 46 || // Check that the previous label does not end with a '-' (dash)\n            lastCharCode === 45 || // Check that the previous label does not end with a '_' (underscore)\n            lastCharCode === 95) {\n                return false;\n            }\n            lastDotIndex = i;\n        } else if (!/*@__INLINE__*/ (isValidAscii(code) || code === 45 || code === 95)) {\n            // Check if there is a forbidden character in the label\n            return false;\n        }\n        lastCharCode = code;\n    }\n    return(// Check that last label is shorter than 63 chars\n    len - lastDotIndex - 1 <= 63 && // Check that the last character is an allowed trailing label character.\n    // Since we already checked that the char is a valid hostname character,\n    // we only need to check that it's different from '-'.\n    lastCharCode !== 45);\n} //# sourceMappingURL=is-valid.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvaXMtdmFsaWQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7O0NBT0MsR0FDRCxTQUFTQSxhQUFhQyxJQUFJO0lBQ3RCLE9BQVEsUUFBUyxNQUFNQSxRQUFRLE9BQVNBLFFBQVEsTUFBTUEsUUFBUSxNQUFPQSxPQUFPO0FBQ2hGO0FBQ0E7Ozs7O0NBS0MsR0FDRCw2QkFBZSxvQ0FBVUMsUUFBUTtJQUM3QixJQUFJQSxTQUFTQyxNQUFNLEdBQUcsS0FBSztRQUN2QixPQUFPO0lBQ1g7SUFDQSxJQUFJRCxTQUFTQyxNQUFNLEtBQUssR0FBRztRQUN2QixPQUFPO0lBQ1g7SUFDQSxJQUNBLGFBQWEsR0FBRyxDQUFDSCxhQUFhRSxTQUFTRSxVQUFVLENBQUMsT0FDOUNGLFNBQVNFLFVBQVUsQ0FBQyxPQUFPLE1BQU0sWUFBWTtJQUM3Q0YsU0FBU0UsVUFBVSxDQUFDLE9BQU8sR0FBRyxtQkFBbUI7TUFDbkQ7UUFDRSxPQUFPO0lBQ1g7SUFDQSxxQ0FBcUM7SUFDckMsSUFBSUMsZUFBZSxDQUFDO0lBQ3BCLElBQUlDLGVBQWUsQ0FBQztJQUNwQixNQUFNQyxNQUFNTCxTQUFTQyxNQUFNO0lBQzNCLElBQUssSUFBSUssSUFBSSxHQUFHQSxJQUFJRCxLQUFLQyxLQUFLLEVBQUc7UUFDN0IsTUFBTVAsT0FBT0MsU0FBU0UsVUFBVSxDQUFDSTtRQUNqQyxJQUFJUCxTQUFTLEdBQUcsT0FBTyxLQUFJO1lBQ3ZCLElBQ0EsK0RBQStEO1lBQy9ETyxJQUFJSCxlQUFlLE1BQ2Ysc0RBQXNEO1lBQ3REQyxpQkFBaUIsTUFDakIsK0RBQStEO1lBQy9EQSxpQkFBaUIsTUFDakIscUVBQXFFO1lBQ3JFQSxpQkFBaUIsSUFBSTtnQkFDckIsT0FBTztZQUNYO1lBQ0FELGVBQWVHO1FBQ25CLE9BQ0ssSUFBSSxDQUFHLGFBQWEsR0FBR1IsQ0FBQUEsYUFBYUMsU0FBU0EsU0FBUyxNQUFNQSxTQUFTLEVBQUMsR0FBSztZQUM1RSx1REFBdUQ7WUFDdkQsT0FBTztRQUNYO1FBQ0FLLGVBQWVMO0lBQ25CO0lBQ0EsT0FDQSxpREFBaUQ7SUFDakRNLE1BQU1GLGVBQWUsS0FBSyxNQUN0Qix3RUFBd0U7SUFDeEUsd0VBQXdFO0lBQ3hFLHNEQUFzRDtJQUN0REMsaUJBQWlCO0FBQ3pCLEVBQ0Esb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGljdGlvbmFyeS1nYW1lLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL2lzLXZhbGlkLmpzPzg4ZjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbXBsZW1lbnRzIGZhc3Qgc2hhbGxvdyB2ZXJpZmljYXRpb24gb2YgaG9zdG5hbWVzLiBUaGlzIGRvZXMgbm90IHBlcmZvcm0gYVxuICogc3RydWN0IGNoZWNrIG9uIHRoZSBjb250ZW50IG9mIGxhYmVscyAoY2xhc3NlcyBvZiBVbmljb2RlIGNoYXJhY3RlcnMsIGV0Yy4pXG4gKiBidXQgaW5zdGVhZCBjaGVjayB0aGF0IHRoZSBzdHJ1Y3R1cmUgaXMgdmFsaWQgKG51bWJlciBvZiBsYWJlbHMsIGxlbmd0aCBvZlxuICogbGFiZWxzLCBldGMuKS5cbiAqXG4gKiBJZiB5b3UgbmVlZCBzdHJpY3RlciB2YWxpZGF0aW9uLCBjb25zaWRlciB1c2luZyBhbiBleHRlcm5hbCBsaWJyYXJ5LlxuICovXG5mdW5jdGlvbiBpc1ZhbGlkQXNjaWkoY29kZSkge1xuICAgIHJldHVybiAoKGNvZGUgPj0gOTcgJiYgY29kZSA8PSAxMjIpIHx8IChjb2RlID49IDQ4ICYmIGNvZGUgPD0gNTcpIHx8IGNvZGUgPiAxMjcpO1xufVxuLyoqXG4gKiBDaGVjayBpZiBhIGhvc3RuYW1lIHN0cmluZyBpcyB2YWxpZC4gSXQncyB1c3VhbGx5IGEgcHJlbGltaW5hcnkgY2hlY2sgYmVmb3JlXG4gKiB0cnlpbmcgdG8gdXNlIGdldERvbWFpbiBvciBhbnl0aGluZyBlbHNlLlxuICpcbiAqIEJld2FyZTogaXQgZG9lcyBub3QgY2hlY2sgaWYgdGhlIFRMRCBleGlzdHMuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChob3N0bmFtZSkge1xuICAgIGlmIChob3N0bmFtZS5sZW5ndGggPiAyNTUpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAoaG9zdG5hbWUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKFxuICAgIC8qQF9fSU5MSU5FX18qLyAhaXNWYWxpZEFzY2lpKGhvc3RuYW1lLmNoYXJDb2RlQXQoMCkpICYmXG4gICAgICAgIGhvc3RuYW1lLmNoYXJDb2RlQXQoMCkgIT09IDQ2ICYmIC8vICcuJyAoZG90KVxuICAgICAgICBob3N0bmFtZS5jaGFyQ29kZUF0KDApICE9PSA5NSAvLyAnXycgKHVuZGVyc2NvcmUpXG4gICAgKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gVmFsaWRhdGUgaG9zdG5hbWUgYWNjb3JkaW5nIHRvIFJGQ1xuICAgIGxldCBsYXN0RG90SW5kZXggPSAtMTtcbiAgICBsZXQgbGFzdENoYXJDb2RlID0gLTE7XG4gICAgY29uc3QgbGVuID0gaG9zdG5hbWUubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3QgY29kZSA9IGhvc3RuYW1lLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgIGlmIChjb2RlID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgIC8vIENoZWNrIHRoYXQgcHJldmlvdXMgbGFiZWwgaXMgPCA2MyBieXRlcyBsb25nICg2NCA9IDYzICsgJy4nKVxuICAgICAgICAgICAgaSAtIGxhc3REb3RJbmRleCA+IDY0IHx8XG4gICAgICAgICAgICAgICAgLy8gQ2hlY2sgdGhhdCBwcmV2aW91cyBjaGFyYWN0ZXIgd2FzIG5vdCBhbHJlYWR5IGEgJy4nXG4gICAgICAgICAgICAgICAgbGFzdENoYXJDb2RlID09PSA0NiB8fFxuICAgICAgICAgICAgICAgIC8vIENoZWNrIHRoYXQgdGhlIHByZXZpb3VzIGxhYmVsIGRvZXMgbm90IGVuZCB3aXRoIGEgJy0nIChkYXNoKVxuICAgICAgICAgICAgICAgIGxhc3RDaGFyQ29kZSA9PT0gNDUgfHxcbiAgICAgICAgICAgICAgICAvLyBDaGVjayB0aGF0IHRoZSBwcmV2aW91cyBsYWJlbCBkb2VzIG5vdCBlbmQgd2l0aCBhICdfJyAodW5kZXJzY29yZSlcbiAgICAgICAgICAgICAgICBsYXN0Q2hhckNvZGUgPT09IDk1KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGFzdERvdEluZGV4ID0gaTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghKCAvKkBfX0lOTElORV9fKi8oaXNWYWxpZEFzY2lpKGNvZGUpIHx8IGNvZGUgPT09IDQ1IHx8IGNvZGUgPT09IDk1KSkpIHtcbiAgICAgICAgICAgIC8vIENoZWNrIGlmIHRoZXJlIGlzIGEgZm9yYmlkZGVuIGNoYXJhY3RlciBpbiB0aGUgbGFiZWxcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBsYXN0Q2hhckNvZGUgPSBjb2RlO1xuICAgIH1cbiAgICByZXR1cm4gKFxuICAgIC8vIENoZWNrIHRoYXQgbGFzdCBsYWJlbCBpcyBzaG9ydGVyIHRoYW4gNjMgY2hhcnNcbiAgICBsZW4gLSBsYXN0RG90SW5kZXggLSAxIDw9IDYzICYmXG4gICAgICAgIC8vIENoZWNrIHRoYXQgdGhlIGxhc3QgY2hhcmFjdGVyIGlzIGFuIGFsbG93ZWQgdHJhaWxpbmcgbGFiZWwgY2hhcmFjdGVyLlxuICAgICAgICAvLyBTaW5jZSB3ZSBhbHJlYWR5IGNoZWNrZWQgdGhhdCB0aGUgY2hhciBpcyBhIHZhbGlkIGhvc3RuYW1lIGNoYXJhY3RlcixcbiAgICAgICAgLy8gd2Ugb25seSBuZWVkIHRvIGNoZWNrIHRoYXQgaXQncyBkaWZmZXJlbnQgZnJvbSAnLScuXG4gICAgICAgIGxhc3RDaGFyQ29kZSAhPT0gNDUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtdmFsaWQuanMubWFwIl0sIm5hbWVzIjpbImlzVmFsaWRBc2NpaSIsImNvZGUiLCJob3N0bmFtZSIsImxlbmd0aCIsImNoYXJDb2RlQXQiLCJsYXN0RG90SW5kZXgiLCJsYXN0Q2hhckNvZGUiLCJsZW4iLCJpIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/is-valid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js":
/*!******************************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(hostname, options, out) {\n    // Fast path for very popular suffixes; this allows to by-pass lookup\n    // completely as well as any extra allocation or string manipulation.\n    if (!options.allowPrivateDomains && hostname.length > 3) {\n        const last = hostname.length - 1;\n        const c3 = hostname.charCodeAt(last);\n        const c2 = hostname.charCodeAt(last - 1);\n        const c1 = hostname.charCodeAt(last - 2);\n        const c0 = hostname.charCodeAt(last - 3);\n        if (c3 === 109 /* 'm' */  && c2 === 111 /* 'o' */  && c1 === 99 /* 'c' */  && c0 === 46 /* '.' */ ) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = \"com\";\n            return true;\n        } else if (c3 === 103 /* 'g' */  && c2 === 114 /* 'r' */  && c1 === 111 /* 'o' */  && c0 === 46 /* '.' */ ) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = \"org\";\n            return true;\n        } else if (c3 === 117 /* 'u' */  && c2 === 100 /* 'd' */  && c1 === 101 /* 'e' */  && c0 === 46 /* '.' */ ) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = \"edu\";\n            return true;\n        } else if (c3 === 118 /* 'v' */  && c2 === 111 /* 'o' */  && c1 === 103 /* 'g' */  && c0 === 46 /* '.' */ ) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = \"gov\";\n            return true;\n        } else if (c3 === 116 /* 't' */  && c2 === 101 /* 'e' */  && c1 === 110 /* 'n' */  && c0 === 46 /* '.' */ ) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = \"net\";\n            return true;\n        } else if (c3 === 101 /* 'e' */  && c2 === 100 /* 'd' */  && c1 === 46 /* '.' */ ) {\n            out.isIcann = true;\n            out.isPrivate = false;\n            out.publicSuffix = \"de\";\n            return true;\n        }\n    }\n    return false;\n} //# sourceMappingURL=fast-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvbG9va3VwL2Zhc3QtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsNkJBQWUsb0NBQVVBLFFBQVEsRUFBRUMsT0FBTyxFQUFFQyxHQUFHO0lBQzNDLHFFQUFxRTtJQUNyRSxxRUFBcUU7SUFDckUsSUFBSSxDQUFDRCxRQUFRRSxtQkFBbUIsSUFBSUgsU0FBU0ksTUFBTSxHQUFHLEdBQUc7UUFDckQsTUFBTUMsT0FBT0wsU0FBU0ksTUFBTSxHQUFHO1FBQy9CLE1BQU1FLEtBQUtOLFNBQVNPLFVBQVUsQ0FBQ0Y7UUFDL0IsTUFBTUcsS0FBS1IsU0FBU08sVUFBVSxDQUFDRixPQUFPO1FBQ3RDLE1BQU1JLEtBQUtULFNBQVNPLFVBQVUsQ0FBQ0YsT0FBTztRQUN0QyxNQUFNSyxLQUFLVixTQUFTTyxVQUFVLENBQUNGLE9BQU87UUFDdEMsSUFBSUMsT0FBTyxJQUFJLE9BQU8sT0FDbEJFLE9BQU8sSUFBSSxPQUFPLE9BQ2xCQyxPQUFPLEdBQUcsT0FBTyxPQUNqQkMsT0FBTyxHQUFHLE9BQU8sS0FBSTtZQUNyQlIsSUFBSVMsT0FBTyxHQUFHO1lBQ2RULElBQUlVLFNBQVMsR0FBRztZQUNoQlYsSUFBSVcsWUFBWSxHQUFHO1lBQ25CLE9BQU87UUFDWCxPQUNLLElBQUlQLE9BQU8sSUFBSSxPQUFPLE9BQ3ZCRSxPQUFPLElBQUksT0FBTyxPQUNsQkMsT0FBTyxJQUFJLE9BQU8sT0FDbEJDLE9BQU8sR0FBRyxPQUFPLEtBQUk7WUFDckJSLElBQUlTLE9BQU8sR0FBRztZQUNkVCxJQUFJVSxTQUFTLEdBQUc7WUFDaEJWLElBQUlXLFlBQVksR0FBRztZQUNuQixPQUFPO1FBQ1gsT0FDSyxJQUFJUCxPQUFPLElBQUksT0FBTyxPQUN2QkUsT0FBTyxJQUFJLE9BQU8sT0FDbEJDLE9BQU8sSUFBSSxPQUFPLE9BQ2xCQyxPQUFPLEdBQUcsT0FBTyxLQUFJO1lBQ3JCUixJQUFJUyxPQUFPLEdBQUc7WUFDZFQsSUFBSVUsU0FBUyxHQUFHO1lBQ2hCVixJQUFJVyxZQUFZLEdBQUc7WUFDbkIsT0FBTztRQUNYLE9BQ0ssSUFBSVAsT0FBTyxJQUFJLE9BQU8sT0FDdkJFLE9BQU8sSUFBSSxPQUFPLE9BQ2xCQyxPQUFPLElBQUksT0FBTyxPQUNsQkMsT0FBTyxHQUFHLE9BQU8sS0FBSTtZQUNyQlIsSUFBSVMsT0FBTyxHQUFHO1lBQ2RULElBQUlVLFNBQVMsR0FBRztZQUNoQlYsSUFBSVcsWUFBWSxHQUFHO1lBQ25CLE9BQU87UUFDWCxPQUNLLElBQUlQLE9BQU8sSUFBSSxPQUFPLE9BQ3ZCRSxPQUFPLElBQUksT0FBTyxPQUNsQkMsT0FBTyxJQUFJLE9BQU8sT0FDbEJDLE9BQU8sR0FBRyxPQUFPLEtBQUk7WUFDckJSLElBQUlTLE9BQU8sR0FBRztZQUNkVCxJQUFJVSxTQUFTLEdBQUc7WUFDaEJWLElBQUlXLFlBQVksR0FBRztZQUNuQixPQUFPO1FBQ1gsT0FDSyxJQUFJUCxPQUFPLElBQUksT0FBTyxPQUN2QkUsT0FBTyxJQUFJLE9BQU8sT0FDbEJDLE9BQU8sR0FBRyxPQUFPLEtBQUk7WUFDckJQLElBQUlTLE9BQU8sR0FBRztZQUNkVCxJQUFJVSxTQUFTLEdBQUc7WUFDaEJWLElBQUlXLFlBQVksR0FBRztZQUNuQixPQUFPO1FBQ1g7SUFDSjtJQUNBLE9BQU87QUFDWCxFQUNBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3BpY3Rpb25hcnktZ2FtZS8uL25vZGVfbW9kdWxlcy90bGR0cy1jb3JlL2Rpc3QvZXM2L3NyYy9sb29rdXAvZmFzdC1wYXRoLmpzP2JlNzQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGhvc3RuYW1lLCBvcHRpb25zLCBvdXQpIHtcbiAgICAvLyBGYXN0IHBhdGggZm9yIHZlcnkgcG9wdWxhciBzdWZmaXhlczsgdGhpcyBhbGxvd3MgdG8gYnktcGFzcyBsb29rdXBcbiAgICAvLyBjb21wbGV0ZWx5IGFzIHdlbGwgYXMgYW55IGV4dHJhIGFsbG9jYXRpb24gb3Igc3RyaW5nIG1hbmlwdWxhdGlvbi5cbiAgICBpZiAoIW9wdGlvbnMuYWxsb3dQcml2YXRlRG9tYWlucyAmJiBob3N0bmFtZS5sZW5ndGggPiAzKSB7XG4gICAgICAgIGNvbnN0IGxhc3QgPSBob3N0bmFtZS5sZW5ndGggLSAxO1xuICAgICAgICBjb25zdCBjMyA9IGhvc3RuYW1lLmNoYXJDb2RlQXQobGFzdCk7XG4gICAgICAgIGNvbnN0IGMyID0gaG9zdG5hbWUuY2hhckNvZGVBdChsYXN0IC0gMSk7XG4gICAgICAgIGNvbnN0IGMxID0gaG9zdG5hbWUuY2hhckNvZGVBdChsYXN0IC0gMik7XG4gICAgICAgIGNvbnN0IGMwID0gaG9zdG5hbWUuY2hhckNvZGVBdChsYXN0IC0gMyk7XG4gICAgICAgIGlmIChjMyA9PT0gMTA5IC8qICdtJyAqLyAmJlxuICAgICAgICAgICAgYzIgPT09IDExMSAvKiAnbycgKi8gJiZcbiAgICAgICAgICAgIGMxID09PSA5OSAvKiAnYycgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnY29tJztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMDMgLyogJ2cnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTE0IC8qICdyJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDExMSAvKiAnbycgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnb3JnJztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMTcgLyogJ3UnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTAwIC8qICdkJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDEwMSAvKiAnZScgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnZWR1JztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMTggLyogJ3YnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTExIC8qICdvJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDEwMyAvKiAnZycgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnZ292JztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMTYgLyogJ3QnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTAxIC8qICdlJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDExMCAvKiAnbicgKi8gJiZcbiAgICAgICAgICAgIGMwID09PSA0NiAvKiAnLicgKi8pIHtcbiAgICAgICAgICAgIG91dC5pc0ljYW5uID0gdHJ1ZTtcbiAgICAgICAgICAgIG91dC5pc1ByaXZhdGUgPSBmYWxzZTtcbiAgICAgICAgICAgIG91dC5wdWJsaWNTdWZmaXggPSAnbmV0JztcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGMzID09PSAxMDEgLyogJ2UnICovICYmXG4gICAgICAgICAgICBjMiA9PT0gMTAwIC8qICdkJyAqLyAmJlxuICAgICAgICAgICAgYzEgPT09IDQ2IC8qICcuJyAqLykge1xuICAgICAgICAgICAgb3V0LmlzSWNhbm4gPSB0cnVlO1xuICAgICAgICAgICAgb3V0LmlzUHJpdmF0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgb3V0LnB1YmxpY1N1ZmZpeCA9ICdkZSc7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYXN0LXBhdGguanMubWFwIl0sIm5hbWVzIjpbImhvc3RuYW1lIiwib3B0aW9ucyIsIm91dCIsImFsbG93UHJpdmF0ZURvbWFpbnMiLCJsZW5ndGgiLCJsYXN0IiwiYzMiLCJjaGFyQ29kZUF0IiwiYzIiLCJjMSIsImMwIiwiaXNJY2FubiIsImlzUHJpdmF0ZSIsInB1YmxpY1N1ZmZpeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/lookup/fast-path.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/options.js":
/*!*********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/options.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   setDefaults: () => (/* binding */ setDefaults)\n/* harmony export */ });\nfunction setDefaultsImpl({ allowIcannDomains = true, allowPrivateDomains = false, detectIp = true, extractHostname = true, mixedInputs = true, validHosts = null, validateHostname = true }) {\n    return {\n        allowIcannDomains,\n        allowPrivateDomains,\n        detectIp,\n        extractHostname,\n        mixedInputs,\n        validHosts,\n        validateHostname\n    };\n}\nconst DEFAULT_OPTIONS = /*@__INLINE__*/ setDefaultsImpl({});\nfunction setDefaults(options) {\n    if (options === undefined) {\n        return DEFAULT_OPTIONS;\n    }\n    return /*@__INLINE__*/ setDefaultsImpl(options);\n} //# sourceMappingURL=options.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvb3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsU0FBU0EsZ0JBQWdCLEVBQUVDLG9CQUFvQixJQUFJLEVBQUVDLHNCQUFzQixLQUFLLEVBQUVDLFdBQVcsSUFBSSxFQUFFQyxrQkFBa0IsSUFBSSxFQUFFQyxjQUFjLElBQUksRUFBRUMsYUFBYSxJQUFJLEVBQUVDLG1CQUFtQixJQUFJLEVBQUc7SUFDeEwsT0FBTztRQUNITjtRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztJQUNKO0FBQ0o7QUFDQSxNQUFNQyxrQkFBa0IsYUFBYSxHQUFHUixnQkFBZ0IsQ0FBQztBQUNsRCxTQUFTUyxZQUFZQyxPQUFPO0lBQy9CLElBQUlBLFlBQVlDLFdBQVc7UUFDdkIsT0FBT0g7SUFDWDtJQUNBLE9BQU8sYUFBYSxHQUFHUixnQkFBZ0JVO0FBQzNDLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGljdGlvbmFyeS1nYW1lLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL29wdGlvbnMuanM/MDMzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzZXREZWZhdWx0c0ltcGwoeyBhbGxvd0ljYW5uRG9tYWlucyA9IHRydWUsIGFsbG93UHJpdmF0ZURvbWFpbnMgPSBmYWxzZSwgZGV0ZWN0SXAgPSB0cnVlLCBleHRyYWN0SG9zdG5hbWUgPSB0cnVlLCBtaXhlZElucHV0cyA9IHRydWUsIHZhbGlkSG9zdHMgPSBudWxsLCB2YWxpZGF0ZUhvc3RuYW1lID0gdHJ1ZSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGFsbG93SWNhbm5Eb21haW5zLFxuICAgICAgICBhbGxvd1ByaXZhdGVEb21haW5zLFxuICAgICAgICBkZXRlY3RJcCxcbiAgICAgICAgZXh0cmFjdEhvc3RuYW1lLFxuICAgICAgICBtaXhlZElucHV0cyxcbiAgICAgICAgdmFsaWRIb3N0cyxcbiAgICAgICAgdmFsaWRhdGVIb3N0bmFtZSxcbiAgICB9O1xufVxuY29uc3QgREVGQVVMVF9PUFRJT05TID0gLypAX19JTkxJTkVfXyovIHNldERlZmF1bHRzSW1wbCh7fSk7XG5leHBvcnQgZnVuY3Rpb24gc2V0RGVmYXVsdHMob3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIERFRkFVTFRfT1BUSU9OUztcbiAgICB9XG4gICAgcmV0dXJuIC8qQF9fSU5MSU5FX18qLyBzZXREZWZhdWx0c0ltcGwob3B0aW9ucyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vcHRpb25zLmpzLm1hcCJdLCJuYW1lcyI6WyJzZXREZWZhdWx0c0ltcGwiLCJhbGxvd0ljYW5uRG9tYWlucyIsImFsbG93UHJpdmF0ZURvbWFpbnMiLCJkZXRlY3RJcCIsImV4dHJhY3RIb3N0bmFtZSIsIm1peGVkSW5wdXRzIiwidmFsaWRIb3N0cyIsInZhbGlkYXRlSG9zdG5hbWUiLCJERUZBVUxUX09QVElPTlMiLCJzZXREZWZhdWx0cyIsIm9wdGlvbnMiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/options.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js":
/*!***********************************************************!*\
  !*** ./node_modules/tldts-core/dist/es6/src/subdomain.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getSubdomain)\n/* harmony export */ });\n/**\n * Returns the subdomain of a hostname string\n */ function getSubdomain(hostname, domain) {\n    // If `hostname` and `domain` are the same, then there is no sub-domain\n    if (domain.length === hostname.length) {\n        return \"\";\n    }\n    return hostname.slice(0, -domain.length - 1);\n} //# sourceMappingURL=subdomain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGxkdHMtY29yZS9kaXN0L2VzNi9zcmMvc3ViZG9tYWluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Q0FFQyxHQUNjLFNBQVNBLGFBQWFDLFFBQVEsRUFBRUMsTUFBTTtJQUNqRCx1RUFBdUU7SUFDdkUsSUFBSUEsT0FBT0MsTUFBTSxLQUFLRixTQUFTRSxNQUFNLEVBQUU7UUFDbkMsT0FBTztJQUNYO0lBQ0EsT0FBT0YsU0FBU0csS0FBSyxDQUFDLEdBQUcsQ0FBQ0YsT0FBT0MsTUFBTSxHQUFHO0FBQzlDLEVBQ0EscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGljdGlvbmFyeS1nYW1lLy4vbm9kZV9tb2R1bGVzL3RsZHRzLWNvcmUvZGlzdC9lczYvc3JjL3N1YmRvbWFpbi5qcz9kNjM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmV0dXJucyB0aGUgc3ViZG9tYWluIG9mIGEgaG9zdG5hbWUgc3RyaW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFN1YmRvbWFpbihob3N0bmFtZSwgZG9tYWluKSB7XG4gICAgLy8gSWYgYGhvc3RuYW1lYCBhbmQgYGRvbWFpbmAgYXJlIHRoZSBzYW1lLCB0aGVuIHRoZXJlIGlzIG5vIHN1Yi1kb21haW5cbiAgICBpZiAoZG9tYWluLmxlbmd0aCA9PT0gaG9zdG5hbWUubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIGhvc3RuYW1lLnNsaWNlKDAsIC1kb21haW4ubGVuZ3RoIC0gMSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJkb21haW4uanMubWFwIl0sIm5hbWVzIjpbImdldFN1YmRvbWFpbiIsImhvc3RuYW1lIiwiZG9tYWluIiwibGVuZ3RoIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/tldts-core/dist/es6/src/subdomain.js\n");

/***/ })

};
;